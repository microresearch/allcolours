* see also software/modes.org

types of overlay: modulo, peak
speed: additive/peak, subtractive, adds from below (which is what we had) 

TODO:

global modes, local modes and see all below

- modes as they come, more about how to divide different areas now... can also be say top and bottom
- review modes and what we have,,,
- what needs to be set or reset when we change modes
- init and zeroing of key arrays

- all modes, tests
- test timing in main/divider
- test with different PSU and hands/fingers
- add protection, re-test PCB - also with new processor F413GTx, BOM and order
- manual: layout and list of modes somehow... touchable, overlays, cutouts...

** 28/4/2023

TODO:

DONE- case 9 and 10:loop mode: - mode which is always
recording in loop (and type of overlay - start with modulus), and
rec/play buttons (length of holding down) set start and end points?
also as variable speed mode,,, bit odd as folds back on itself - 2
different versions of this, also with/without speed...

DONE/test further case 11: 
how we can record global changes in speed... tap of freeze on top speed one... additive speed recordings
- question of what speed we use to access recorded speeds... not so simple...

but again for any additive rec we would need to clear that. how to time clearing speed? speedtest

/// notebook notes:

- freeze: 
as freeze
as detach -> leave playback, reattach back into sequence
as re-record -> that section until next freeze
as reset -> of section to blank, see how long that takes...TEST!
what else?

- how we deal with overlap? - over-record, I think this is default // add-rec is option
- loop/rec/add - as limit4095//as modulo

- add speed rec - how we start stop // order of:
  recO->playO->speedrec? or playback is always speedrec in that mode,
  length is length of rec, detach from speed/from rec

- where is reset of each set of recordings?

** 27/4/2023

- *what we need to do when we change modes - eg. lastrec and lastplay...*

DONE: diodes added on base PCB in new dir // to order and test...

- DONE-LOG/and fixedlog//decide on linear or log speed across all? generate test arrays...
- DONEnew log array for just additive speeds 1-16 test in: case 5:

DONETESTED- case 7: voltage as sectional speed only on playback - differs for different adcs TESTING?
*makes more sense for individual modes as what if there is nothing recorded... also for record loop then speed...*

or 2 taps rec...

- DONE:case 8rec slow down count (with fixed speed) - test - was which one... 6 has speedslow...

//

how and where do we record individual speeds - in loop...

- list what modes we have or can port and how these can be modified:

////////////////////////////////////
//recent notebook:

Divide modes global and local...

- detach a section, what that means? re-record that section only, leave that section as live/unrecorded
- loop of rec and overlay - key is length of loop and how to determine this

          GLOBAL    | LOCAL
-no speed
-speed
-loop and overlay
-speed is recorded // when and where?

// detach - global becomes local

do we still use rec and play in local modes - eg. rec starts possibility to record, play plays back... see each case...

x different speeds/different overlays if necessary

speeds: faster, slower, starts slow

** 26/4/2023

TESTS as below:
- DONE:test resolution...  seems high enough at 32
- DONE case 4: subtractive speed (need new log scheme there - how slow... 1/64 - // fixed bug in speedsample

- DONE case 5: change speed of global recording - but we get a jump if we change speed from voltage there... so we could have fixed sets of record speeds in modes...

this is also is general issue of all simultaneous recordings - why we need *independent recordings and free/detached play/over-recordings...*

*question of speed and ram - leave open for now...* 

static uint16_t recordings[8][7000]={0}; // 

but we wanted top bits for speed and we have 12 bits for values??? which leaves 4 for speed....

// new stm - F413 is 100mhz, 320kb, STM32H7A3RGT is ++mhz and 1184KB , H573 are pin compatible... much more memory

or 413RGT6 has 320k and is available at farnell

we have 128kb ram... on f446 // 

//////////////

- panel filter pcb doesn't match schematic so it ALREADY has 15k there so we just need DIODES (so no need for extra resistors there) - base or panel... base?

but we would need for freezers and any other pins exposed - 10k but should be fine...

** 25/4/2023

TODO: port/draft new modes eg. individual speeds of global sections, play/overlay each section, individual rec and playback...

types of overlay: modulo, peak

speed: additive, subtractive, adds from below (which is what we had) 

how we can record changes in speed... tap of freeze on top speed one...

from earlier notes: - DONETEST: also do we have functionality to change/slow down speed of recording - so jumps/blends=interpolates like a slur of values...

- also question of voltage of each as speed of section in playback - as we need log and is odd mix... 0-3 is already log, 4->7 needs shift and log

// if else i guess

TODO: 

- new touch panel // or could be on base with protection diodes and resistance

todayDONE:

- added ignore top bits which we will use later

- DONE**full open and close of VCA - test on lowest one -> R26 OUT1TOMIX -> 27k tested, no bleed and full voltage (changed on PCB/schematic - but lots of errors to fix there)

- max for our finger is 2.2v (so just 11 bits but that leaves us short)

- log for vol, linear for value... - so do this in macro...

// check voltage range from VCA bottom bit - we hit 1.5-2v
  
so for VCA let's stick with log approach and other is linear

** 24/4/2023

DONEcheck VCA full range, adjust parts

Note: all adc is 12 bits but we treat as 10 bits ... how high do we go?

- note that we don't get full VCA voltage out - do we need to re-adjust this? - see notes below at 4.2v - can we fix this in control...
// or maybe just adjust final amplifier res to say 22k

- full voltage out-> 5v checked...

- does speed freeze...? no, should it just follow our CV?? this could be option - we try and works well with freeze

// logspeed goes from 1/8th to 4x speed...

*TODO: define MODES!*

- list of new modes to do in new_modes.org - check older code, modes lists
- use of top bits for individual speeds...

//
- freezer as way of detaching rec or playback of each section
- if we are in playback can be ways of touch adding or modulating playback or use voltage as individual speed or another factor (like length of loop)

eg. touch is not adding any voltage, but changing a parameter = speed, length, what else?

- type of overlay - modulo, additive, subtractive


** 20/4/2023

- DISCARD->NOT working - as always jumps up on freeze... that after freeze we can still add value to freeze as a
  baseline. makes sense for VCA (and voltage). otherwise the pad does
  nothing and can always be left alone. To make sure all modes make
  sense, even if not sure which mode one is in...

** 29/3/2023 TODO:

- start to define tasks from below:

-basic functioning: what is prescalar, how long do we want top record for, what is frequency resolution, any artefacts, speed up and slow donw
-define timings and check all mode/freezes etc.
-define and implement modes
-BOM, assembly...

- use debug to figure out rough rec speed? every 6 or so seconds // prescalar of 8

with prescalar of 32 we have 22 seconds (so not quite with our calculations)



*which prescalar?*

- test logspeed and speed modifiers (speed starts from slowest?)

** 27/3/2023: REVISIT2

TODO:
- re-check basic functioning
- HW and washers - as we don't seem to use them: tested now with one washer and is fine..., BOM/update any footprints (what are ones for assembly:

Housings_SOIC:SOIC-8_3.9x4.9mm_Pitch1.27mm

SM1206POL

which is correct base PCB - last one?

- re-acquaint code - how well it works as basic and calibrate speed again...
- list of new modes to do in new_modes.org - check older code, modes lists

it_strip.c

- how to make sense? eg. speed ranges-logspeed, 1/8 speed, top bits ???

- top bits are used in modes in it.c for individual speeds
- range is logspeed - check this, 1/8 as we run through 8 DACs
  sequentially..., top bits were reserved for individual speeds...

- how fast does it run and  how many seconds of gestures by default???

7000 values in each array: 2kHz we say (at 32 pre-scaler to check as was last at 8): and there are 8 sections so each runs at 2k/8=250Hz

7000/250=28 seconds... TO CHECK!

*older below*

** 4/10/2022

- *also do we have functionality to change speed of recording - so jumps/blends=interpolates like a slur of values...*

** 20/7/2022: REVISIT

- test what is working: basic functions, freezers, rec/play but is 1/8 speed correct - re-test as 1.0

- where are we up to with speed ranges - we have logspeed

- check/test code for mode switch and re-acquaint code: top bits to implement, basic schemes

- what modes still need to be implemented: list these - see modes.org for list there and older code...

** xxx

30/12/2021:

- switched over to HSE in system_stm32 rather than other clock init and seems to work fine but will need to recalibrate timings/re-check but freeze works

20/12/2021:

// so we might need to tweak the speed array but bleed is now SORTED!

- so no bleed with freezers as these don't involve the adc - what about on additive playback?TESTED fine 

- DONE:but we need to re-do speed as was for old adc scheme

17/12/2021:

SOLVED with single ADCs and lookup arrays.. 

- remaining bleed is in ADC array ... 

- note that 0 should be 16mV but we have 88mV with << scheme and single ADC

single ADC reduced bleed with <<2 to 88->112mV which is 24mV

single ADC fails to read case 2 channel 5???!!! - FIXED with disabling DAC channel 2

still slight bleed - lookup for values so we keep bottom low (try log too)

16/12/2021:

- speed code is re-written also now with logspeed to try out...

TODO: trial with all caps replaced for bleedthrough etc - 1NF DONE

still bleedthrough but is that anything to do with caps... (see how small we can go with c9 - 100pF?)

TODO:

different fingers for vca, 

also if we can change vca so opens a bit more: values there R52 was adjusted from 47k to 10K maybe trial other values

20k now we have and seems ok

15/12/2021:

- need to add overlap flag for rec and playback...DONE

- problems with speeds and aliasing so need to rewrite code without 32 steps

- try without the 32x slowdown for record (and speed will skip samples)

so we need 8x say upwards of 1KHz which is 8KHz in main loop

we have:

  // 1024/4 is 8x 862Hz (toggle speed so 2x that which is fine for us but we need to lower the sample/hold cap...

replaced c9 with 1NF (from 47NF)

1.6k=4 seconds..

14/12/2021 

- CV out peaks at 6v - 6.6v is our maxium for 4095

- VCA 4.24 VPP for 5v signal (4.6v is 4095 as I guess we close the VCA a bit) but we can only get to 4.2v on first VCA

- aliasing always - we need to re-think all speeds as DAC can only run up to 100 Hz

/// reduce capacitor in sample/hold from 47nF


+input filter is 15nF and 15k so gives cutoff of 700Hz x2=1.4KHz which is fine+


but rec is 32 times slower and each dac is x8 so that is 32x8=256

in theory is then 8KHz / 256 = 31Hz so aliasing

- so we make everything run faster but really need to resolve all and be very precise of speeds (filters in recording)

- what do we need to get to 1KHz - 256KHz clock

what is max recording again? if say we record at 1 KHz - 7000 samples is 7 seconds...

// need to check we run fast enough for that clock, alternative would be to software filter for recordings
