* TODO:

21 seconds recording length with divider of 24 (this also may change with modes - silence/gaps..., slower rec speeds/resolution)

CHANGE now with 50Hz filter=100Hz sampling=100seconds maybe...

** plan

*** re-testing VCA

- now VCAs are around 5v (why has this changed?)

[first and third VCA out has 500mV noise on it from toggles and freezers: to resolve but we never hear it at its frequency... bit less now 240mV...
last VCA is stuck full on: short! re-test FIXED (solder issue on panel connector)]

*** how to unify modes somehow: across use of top bits and minormodes

** Modes in progress // to be filled out with minormodes and tested:

0: basic mode with overlay and speed control on [6] // TESTED/minors
1: basic mode with overlay and no speed control // TESTED/minors

2: mode with global speed recording  //minors TO TEST in full // speed in recorded in playback on top[6] freeze//

*IN progress below with no minors, so just proof of concept:*

3. record local speeds - could be local triggering and all take [6] as voltage

 - so no other use of freeze and [6] left alone // so can be as case 2 mods but no freeze/triggers ....

4. as above with record local speed with local voltages...

- TODO:we can have VCA as speed or voltage as speed...

// recordings overlay just/only for VCA or not, also what toggle/freeze does in overlaid case - ignore speed overlay?

see below:

DONE5- [79]? - overlay one repeating section with different overlays REWORK mode 79, we can store original loop there(where?), and expand overlay in top bits ???*

so we store loop in bottom (so rec stays same) and expanding overlay is up to max length. decide what to do with speed but attempt as basic speed

rework play and overlay. rec will rewrite all... top and bottom

//16/10/2023:

DONE5- added toggle

but this is how it is as they are not synced!
- added but seems like playback 2 layers go out of sync TODO:this could also be exploited eg. freeze freezes/holds playback of overlay or we have 2 different speeds)*
we already have stopping/restarting with toggle here,,, but not *the 2 different speeds/how???*


DONE6- as 5 but we keep original length for overlay// both can have that toggle

DONE7- as 5 but toggle clears overlay as we go along
DONE8- ^^^^^ as 6

*also various re-record options for these! // how to genericise these (so is not always same code we need to write???) cases are inside main body???*

3- [81] - or it could also be the original and we make all full overlays in top bits, freeze/unfreeze toggles between the two for each!!*
// so same as 5 but we keep length the same and do togglings .. 5 can also have togglings

**3++ - as both options above with ongoing overlay in top bits, and TOGGLE clears that overlay - so we can do it again...

////

and all options for *detachment* using freeze/toggle - so toggle stops
current mode for that section and restarts it... so we can
unsync... (reverts to nada for rec or play and to play for overlay???) - only when we don't use toggle // or mod that

so this leaves TODO?DONE but needs testing and if these are all major modes...: 

trial these options as 9,10 versions as 5= ext length and do for same length...

islands??? was [80] but now is just toggle in overlay of recording or not... rec on freeze only - but do we have this...

rethink what toggle can do in 5 and 6 top bit overlays // diff length/same length:

so far we have:
- output overlay or not // add overlay or not
- clears overlay as we go

does it make sense to:
- stop/start overlay playback(also for other trad overlays) - if we stop playback there is no hold/frozen value...

but then we can't hear overlay playback... so makes no sense to record...

- stop/start overlay recordings (is more like an island then) but playback still runs...

TEST11 and 12: or should these all be minormodes of what freeze does in overlay???

TESTED/TEST 13:- freeze sets enderr in enderr case (5) so we loop at that point: 13 - thing is overlay can only ever get shorter...

14: new speed recording on freeze of top in playback only

*/////////////////////TODO ++*

NO!- change rec/play speeds - but in a volatile way...??? how we realise that - as we can't sense it in rec and in overlay it is all feedsback!
that we could have top bits as rec at different rec speeds - minor modes define range of speeds - but one is always regular...*

- *modeX: record to both top and bottom and switch in play/overlay modes between - different lengths for each, merge, unmerge?*

- mirrorings - where we had that?
23testedTODOmore- overlay mirror: all follow say lowest/bottom voltage 0 but add own 	    //and variations on this eg. all voltages only, all VCA, all

- chopping up gestures...// gaps/distance

7- chopping up gestures.... store distance in top bits or in length - silence is stored as length (so compressed) *but what happens in recorded overlay???*
//local and general gaps/distance

- also alternate outs on toggle - for example also in overlay whether we re-record our own playback at diff speeds or same speed (we have to) // toggle???
*top bits as alternate outs to be toggled...*

- *still could do thing where we start to repeat say first section (or a define island) and overlay this on same tape!*

or we can move fragmented areas to overlays... islands in overlays // again more about how as we just have voltage, freeze and minormodes

*again how to make this more coherent... top bits abstracted out....*

from older: reflections/islands:
24: freeze just plays back with own overlay the previous section ADC (does not copy), unfreeze reverts to own record...
25: freeze copies previous section ADC - copy as we play back into rec buffer, unfreeze just stops this process
26: overlays the previous one on playback - so adds the 2 recs...

*what we can do with a list of gestures*

*//////////////////////////////////////////////////////////////////////*

** 10/8+ MODES

Start to define major modes:

// strip.c

DONE0- [78] - default with freeze as freeze // double up recording length
DONE1- [79]? - overlay one repeating section with different overlays *REWORK mode 79, we can store original loop there(where?), and expand overlay in top bits ???*
---->>>2- [80] - islands????
3- [81] - or it could also be the original and we make all full overlays in top bits, freeze/unfreeze toggles between the two for each!!*
**3++ - as both options above with ongoing overlay in top bits, and TOGGLE clears that overlay - so we can do it again...

// below....

DONE4+ local speed recording on voltages 
4++ local detach and others for some of these modes already defined
5- detach rec/play using freeze and rec/play counter behaviours
6- mirrorings ???
7- chopping up gestures.... store distance in top bits - silence is stored as length (so compressed) *but what happens in recorded overlay???*
//local and general gaps/distance

8- differing rec and playback speeds
DONE9++ record general speed, overlay and general speed (where did we store general speed before? in [6]???) [11/12 ]

*that major modes define use of top bits:*

- always as speed? as speed in one majormode - local/global
- as our repeat or /other/ layer *like a ghost recording, a double, a mirror - local
- IN process: to double our recording length
- to store short loop - local
- to record (silent) distance between segments
- *TODO:alternate feedback outs in overlay modes*
- as complete alternatives - rec is both but reced overlay and playback alternates

*major modes also define use of freeze and voltage[6]*

minormodes for each state depends on major mode: 

play: overlay type, resets, speed setting, how we deal with recorded speed in certain modes, mirrors, if we detach voltage
if freeze stops play counter/or leaves it running and just saves last value
freeze as: holding of playback voltage, holding of overlay voltage etc.

rec: resets, rec speed only?

overlay=rec+play: type of recorded overlay(see cases 9/10), speed dealings as with play
do we detach rec or play in detach majormode?

playback speed settings ref:

- no speed setting
- logfast/logspeed(slow-add from below)
- freeze on [6] freezes speed, freezes value, freezes both

for rec speed mode - split [6] as rec speed/rec voltage (eg. rec speed only, *rec voltage only*, frees) - levels: freeze, rec, freerunning - rec speed is only in rec+play?
= also freeze leaves voltage alone on local speed recordings/detach 

*[6] as parameter (eg. speed), as overlay/voltage, as both, as neither*

// where to place recording speed in top bits, general question of use of top bits? ???*

/////

state/mode  | freezer depends on mode

NADA        - freeze (default type is overlay/peak as in case 7)
REC         - stop(loop/local end)/start(extend or insert) - is question of reset or? also does make sense if we don't playback... 
PLAY        - stop/start (unsync) - (and options to freeze play or keep counting but no playback)
              or start/end - loop/extend or insert?
              or as above if that differs from detach
            - use of rec voltage as speed or not (see above) 
OVERLAY     - overlay/simple rec
              overlay/no change ??? and as above/detachments      
	      stop.start (unsync) - but we have rec and play syncs/starts...

notes:
- in overlay freeze can stop and start overlay - see below - stop is no rec not reset below
- in overlay freeze can reset that section to 0 - so no overlay just re-record that section once then overlay (how?)

overlay: stop(loop/local end)/start(extend or insert)

DONE- if we use top bits differently means that we need to reset already recorded something flag* to 0 as we enter each new major mode... ender - this we do in MODECHANGED macro!

** manual/description

ERD/VIA is the Way, the new modular life, severing hands from knobs
and tinkering, and establishing a new local skin regime of signals and
gestures for dis-embodied prostheses. VIA is a new touch and
finger-based controller for ERD and all modules, allowing voltage
control to be freed from erudite wiggling, and surrendered to purely
cut and segmented gestures. Voltages are placed on the surface of both
skin and module to facilitate cross-spore-modulation and feedback.

Four identical sections allow touch and gesture to govern a single VCA
and a control voltage (CV) independently. Input, output and control
voltages can also be mixed by skin and gesture. Gestural sections can
be recorded and played back, chopped and cut, frozen, altered, sped
up, slowed down, repeated, severed, overlaid, ghosted and finally
dis-embodied and de-organised, all under touch and skin-feedback
control. Signals can be routed on the skin to act globally and
independently. 

longer - what are the modes // how many modes?

basic operations - where we touch, what is vca, routing of signals,
freeze, micro/macro modes, rec/playback, lengths and timings!

instructions etc...

Image cards are cut out - disembodied hands, each of the 4 segments
cracked apart and somehow labelled... some uncut cards maybe to show
assembly/with text also on back for modes ... cut yourself out

** hardware

- +12v:75mA
- -12v:50mA

** finger catalogue - testing with 10M triggers-.4.7Mnow, 1M dividers lowest vca/voltage, 47nF board, 32 divide, lowest sensitivity:

other module toggles will change so have range: 1, 2.2, 4.7, 10 from SW4(bottom) to SW1(top)

reverted to 4.7M for toggles on main touch (should do same for touch toggle)

me: 470K all works fine but just on voltage pad, no touch to voltage we have 200mV 50Hz (using 15nF board and 32 divider)

TRYING now with top panel with 47NF- hardly any noise (retry that with K) - but that also has 1M on lower 2 dividers (not 1.2M)

Kati: 2M finger measures // touch/toggle brd: 10M works, 1M unreliable // voltage: max 4v wavy // VCA, fine at 4,4v // we added HELDER=4 to macro mode code // rec/play etc. fine

[rec, play, freeze still at 3.3M-now updated to 10M]

Kaffe: see below...

Chris: 3.5M, // touch/toggle GOOD! // 4v or 5v // perfect toggle! 

Rich: 3M // touch/toggle: jumpy!! // toggles // voltage 4v, medium noise // toggles all fine 

UNK: 0.6M // toggle fine all // voltage 6v  // toggle fine... 

Meli: 18M //touch toggle a bit jumpy - 4.7M maybe better, also touching GND works well (as a possible solution) // voltage 6v // toggles to test with new test boardDONEfine

DAN: 4M // voltage all fine on both, wobbles a bit // toggle fine //  timing fine...

with baseminor=0 below/// low sensitivity

yawning: 7v CV, 1M finger, touch mode fine... frozen fine...
cammack: 2M, frozen fine, modetoggle fine..., 7v peak - wobbly


** 1/12/2023

NEW board// copy across to new folder:

- limit 12v current to pads! (say 10k)DONE
- test 12v divider on scope... with our finger we get around 4v with lower 470K

- no IN signal on pad but OUT and it is amped (as is B signal)
- pad which was mix is now ADC - if we have spare...



** 30/11/2023

killed board/order JLPCB proto with new changes in any case...

*NEW HW notes:*

- higher voltage on pads (say 5v, ideally more) could fix noise as we don't need to amplify.... - would a divider work

ideally 7V or so... and if was 12v

ADCs already have protection!

revert filter to 220Hz values we had

try different values 470k

VCA section: lose decouple cap... DONE

** 29/11/2023

*fix 50Hz on all* 

// third/top VCA also has intermittent HF noise - solder???

incoming filter as 32K and 100NF for 53Hz low pass // was 47nF and 15K
(testing now 33k)

remember is low pass - say we sample at 80Hz and have low pass at 40Hz=39k // 79k=20Hz = 79mV of 50Hz

- if we slow down sampling we have aliasing still from 50Hz - low pass in software before we slow sampling...

// *note for our tests we modified macro for voltage [4]*

/////////////////////

more notes/ again towards defining behaviours...

- *2 lists: play and rec per. layer:*

*rec list:* - just adds and overlaps and is. a tape

*play list:* eg. [0-10][0-10][20-160]

how we manage this list in play mode... 

is it cumulative (add in and out to the list) but we need then 2 modes in play mode (and to toggle between and to toggle layer (or that is just in NADA)

2 play modes: select = play tape and select//add to list, play list only (what we toggle there - remove from list?)

//

headless
fingerless
handless

** 28/11/2023

- 2 layers // 2 code streams

- freeze in NADA freezes any mode change for that section - so modes
  can be per section (how could be also per current layer that we freeze on)

- freeze in NADA toggles layer??? how do we know which?

- NADA always records (to one or to both layers) and play sets START and END (do we have code for that): speedsamplestart
Q. of how we add to this in the case of an overlap - see above

- *long and short taps on freezer for different behaviours* [could also be on rec and play]

*how can VIA be informed by concepts of AION and CHRONOS - divisibility of time/no present and all present/all depth*

*that there can be the tape itself and a list of (playback) references
into that tape* // for example we can have list of repeated segments
or long looping part (how many times it loops) - how to implement
this, and also how on the record side...

record list, play list... how we handle these... and this is for each layer?

record list is additive

play list is determined by modes in play and touches...

** 27/11/2023

2 sides // 2 sides each of the 4 // hermaphrodite 2 layers

- major modes can differ across functions (rec, play etc)

*does it make sense if there are also different mode for each layer?*

demonic/good hermaphrodite...

- detach could be in minor modes...

- review and define from all notes... review minormodes

*we mention slowing a gesture - slow speed to other side... TODO* or we slow recording on one side?

// notebooks:

- layer operations:

1: [][][]
2: [    ]

whichever is longer// *we can reset length of one/both layer*, hold/slide/desync one layer...

define properties of layers: 

add/subtract/merge etc.

these are all modes which operate on same enlarging set of
gestures... [Q also if we can say remove last recorded bit - we just
need to record its start and end, but what if it is an overlap - makes it tricky? - still q of list of gestures]

one layer is a ghost and we can swap that designation...

ops: remove silence for voltages...???

*cycling through alternate ways of reading recorded gestures*

*algorithmic easter egg*

add or subtract gestures in play mode

detachment

*still todo modes above esp. - *still could do thing where we start to repeat say first section (or a define island) and overlay this on same tape!*


** 24/11/2023

- 2 layers //4 sides // each of 2 layers each

That VCA and voltage are not/should they be/ fixed to one side 

eg. they can reflect - so say we can add VCA and voltage and output on both // does that make sense...

swop them around... but they have quite different functions... so maybe doesn't make sense... 

** 22/11/2023

- if we sync counters across 2 layers then we have issue as one might go past end of other! // speedsampleL DEP!

** 21/11/2023

- struct for each layer DONE - what does it enable us to do, or what are issues/questions:

ending of each, sync of swopped playback as each speedplay has its own
counters (or these become one - for each layer: speedsampleL),
question of overlap for each layer, which layer on entry into play
etc, if layer is not there what we do in playback?, can have more
function pointers for different options also...

/////
- question still of list (as it should also indicate the layer) - we need list to be able to remove! *DISCARDED for NOW*

- 2 layers/tapes: speeds, slide across

- re-test timings/hold of minormode

** 20/11/2023

*TODO: tests, trials of possible modes and approaches*

list of gestures is more complex as we overrun, overwrite previous gestures... DRAFTED in new file // how to test?*

- *how to simplify genericise as now we have too many notes/options: new model to compile from notebook and notes here* 

[6] as control gesture...???

*basic model is 2 tapes/layers... check case 5/6 as model with variations after that // no speed recs*

- that we only ever record the *effects* of speed changes on a gesture...

new mode 0 in 1123 file:

*speed re-record -> questions: but when we re-enter we re-record and lose speed... need somehow to swop over...*

how to swop: variable to indicate current layer...

/////

*what cases we need to code for // eg.*

-record playback speed change on layer 1-> layer 2

but how do we get feedback for this...

*now in new file but not toggle// always NO USE OF TOGGLE:
toggle starts to record to layer2(overlay) speed changes from layer1 and we hear those changes (we are in 1). toggle stops and stays with 2... so no overlay recorded. local and global speeds*

- rec toggles 1 or 2 to record to (but no feedback so how we know which?)
- play toggles which one but one maybe blank?

twinned layer operations: swop, merge/add/subtract/mix, bounce to/record from one to other with speeds, slide across, different speeds

list ops: add (new rec), remove, swop, copy/double, collapse=join, chop?as in cut silence and render as new lists, hide/unhide, detach

-islands and notes above and below...
-list of gestures


** 19/11/2023

questions/thoughts:

- do we extend overlay? was marked as TODO minormode option in [0]
- what minormodes we have so far? in [0]?

in all: sensitivity (code is fine as we >>1 all)

	//rec -nada
	
	//overlay
	overoverlay=((overminor>>1)&3); // 2 types of overlay
	overrec=((overminor>>3)&3); // type of recorded overlay 
	overspeedmod=((overminor>>5)&1);// 

	//play
	playoverlay=((playminor>>1)&3); // 4 types of overlay
	playspeed=((playminor>>3)&1); // 2 types speed 
	playfreeze=((playminor>>4)&1); // 2 types freeze
	playspeedmod=((playminor>>5)&2);  //

*which of these we retain?* run through them

- how play and rec can be generic? what are the exceptions so far?

- how we could record slowing down of a gesture - needs a place to record into (layer or new entry in list)?

- if we have list and add to it what happens if we run out of space - last entry stops... (is not like a tape loop)

typedef struct listy_ { 
  uint32_t start[120];  
  uint32_t gap[120];
  uint32_t length[120];
  float speed[120];
} hands;

static hands fingers[8];
static uint32_t howmanyfingers[8]={0,0,0,0, 0,0,0,0};

// *notebook notes to fill in... new divination/layer/list plans...*

** 26/10/2023

//why freeze speed doesn't work in mode0//FIXED!

*To start to define new direction based on latest notes*

notebook notes:

- Q of new speed rec, all is overlay, or *speed global as [6] voltage and local voltages*... no doublings 
- so we can maintain, modify or erase overlay as we progress
- and use overlay as speed or not...
- additive switch/swop across 2 tapes (2 tapes, 2 speeds - how?)
- algorithmic control as pulse in to freezers/toggles, minimode
- *translate modes we have into ongoing series of transformations*

- what we can do with a list of gestures, list of modes: earlier idea of push/pop/ *stack* button... 

earlier idea was: Notes: frozen levels are saved to a stack and can be popped off the stack, various over-rides...????

circular stack of gestures - how to add, remove and what happens when we run out of room??? 

** 25/10/2023 *KEY*

- trying to re-think towards more fluidity// notebook notes:

1. We could pull out REC and NADA as these have no modes (but in REC we have double and other rec options, also if we reset)

as in REC we have no feedback on what we do. so it must be simple... but how we could signify a RESET there in further modes, to start again and not to add to!?

First mode (after full RESETT) is just record, no speed, and is always reset REC in this mode - but then we can leave it...

Then we change after that...

Question of no double record, no speed rec? and top bits are always ghost/overlay with voltage 6 as speed (and seperate its playback speed)

*So modes overlay and change what we have already recorded gesturally - but how can we move back or forwards through modes?? or is just fwd*

And do we keep micromodes (yes)... but these do not include reset on REC...

3. top [6]voltage is always control - so no freeze on that. but is also output so we can use it for sync...

4. *Options for algorithmic control*

So we can use external voltage input via fingers to trigger freeze/toggles! Write this up in manual...

What does this enable - 

5. Global gestures - eg. as offsets from lowest VCA or voltage - have those as groups, or we slide sync across them all

6. List of gestures, actions on gestures to list? overlay, repeat, move in the list, detach, slide, attach

7. How we control - with local voltage, with [6] and freeze/toggle[6], with local toggles, with timings of presses, with gestures??? with modeswitch

8. Maybe 2 resets - one full to mode 0/basic REC, other just resets counters and sequence... we had idea below...

To consider new scheme... so more like an instrument

*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*

** 24/10/2023

- *test modes below: 0(voltage [6] overlay, 5overlay, 14speeds*

DONE0 -overlay - toggle below would be a bit odd unless we record speed...

options: speed and overlay, speed, overlay (minimodes?) - freeze holds speed

0: changed so voltage [6] is speed and overlay

5: seems to work fine with new changes...

14: - fix end of newer speed playback [mode14] so we dont go past it - can we/do we? also  if it also matches recend or just loops on own length???*
 - working now - loops on recend - could also be its own length (trial)

** 23/10/2023

- NO!see above:TOGGLE in play for 0 and further - local voltage as speed (recorded or otherwise) // local voltage as overlay so we have both options

*we always need to be able to overlay and record overlayXXX*

- how to imagine list operators/operations ...?

how we signal operations just with toggle - or instead of modes we have use of mode switch to change behaviours (globally?)

TODO:
- DONE:check overlay bits counter in mode 5+ - is speedsample so has local counter

but does it go past end of ... - some other bits to fix in 5// test and then pass on to rest of modes

TEST - lots to fix in mode 5

*lots of questions for what needs to be reset...*

added over_cnt

** 22/10/2023

TODO:
- fix end of newer speed playback [mode14] so we dont go past it - can we/do we? also  if it also matches recend or just loops on own length???*

** 20/10/2023:

TODO:

- DONEredo speed recording with new counter like rec_cnt. resets when we reset others... 2 counters: rec and play
- *????speed playback can also loop, stop, pause etc...*

// as new versions of 2, 3 and 4: speedrec global and local TODO!

2->14 now in progress TO TEST!

// question if we loop speed to own ender or rec_ender??? - can be as an option but now works in principle and fixes added to 2,3,4 

- also global time ... counter DONE but unused

// keep other mixed up speed options...

// prev speed rec issues: TODO: check how we record speed - that one option should not depend on playback but consistent rec speed...*

well we record in  playback so ... we just have play position which varies with speed... or we set a new counter to 0 when we enter...

// questions/problems with speed recordings:

- if we only partly record speed overlay we have issue... (could be overcome with section storage or some marker)

so for 2 nd 3 speed rec modes - we need to record where we keep speed to... // so last count and where we start

depends on scheme - but count needs to start from where in terms of rec_cnt


** 19/10/2023:

- for below... what list gives us and how we can operate with it... draft list stuff

- DONE: removed reset as option/minimode in all *we reset on new modes?* *TODO: take care of resets...*

*short reset - set rec/play back to 0*
*long reset - reset all and mode to 0*

*Q of new mode reset???*

Notebook notes:

- some kind of meta level to eg. loop repeated play/stop/play segments in a loop... how?

how do we know where to stop loop...

in overlay - play/stop/play into top section. we have this but is it with silence inside? we freeze but does rec keep running? check...

what are options there in overlay:

- pause play - keep rec running so we record the pause
- pause play - stop rec, so becomes next one

- what can we do with our list of gestures - does it include modes??????
- model of tapes, model of list and tapes/pointers....

*Rethinking:*

VIA as more of a *journey* from the first gesture:

- that we modify and re-record gestures which operate on (already recorded) gestures...

- is the use of top bits for different ends a problem for continuity across modes - or is journey INSIDE each mode...

what makes sense:

//- record gesture (rec mode)
-> append new one (no reset in rec mode) (changes length), insert new one, insert gaps??? append at end, in new point (

-> modify it - overlay it, change it, change its length - what other chanfes?
-> rework it as a loop. stop and starts as above. in play?
-> change speed

** 18/10/2023:

- added lowest bit as sensitivity, TO TEST!

q of latest modes as minormodes: 5,6,7,8.9,10,11,12,13 variations on loopy 5 and 6

notebook notes:

- DONE/TODO - sensitivity micromode; SENSESHIFT, SENSEOFFSET and re-test VCA

- more double-length modes: eg. overlay from earlier section (which becomes an island we can choose to change or not)
- view as a tape with 2 layers (of information), or as continuous (double length)

- *list of segments* (how many and how to control?)

for 40 seconds we can have max 120 segments - q of memory...

segment: startplace (in array), length, speed, gap to next (or from previous)

but main question is how to work with segments:

ie. they can be swopped, they can repeat/be copied in the list, removed, remove gap, reverse list etc...

top would still be overlay or more segments itself... (if we don't have double length)

*also to test what 0 looks like - like what is silence we record as a gap...* // test code for 0 as full V

- *modeX: record to both top and bottom and switch in play/overlay modes between*

** 17/10/2023

notebook notes:

- how to genericise again: as top data use, freeze use, type of overlay/re-record

*define rec and play completely...*

nada: always same
play: different///double is different, with speed rec is a different kind of play or??? check! but has different minormodes
rec: double up makes it different, also enderr
replay: all different...

- *top bits:*
-as mirror also
-as incremental copying of lower bits
-as incremented swop - change over...

- how we can view the recording as 2 tapes which can play across each other: also if we re-record from top into bottom and erase top as we go... try to classify these...

- *chop up:* list of gestures with pointers (length too???)

- *list minor modes* in each case (0,1, and 2 have these so far - hints for other modes);

nada: none
rec: reset only
play: 

0:
playreset=playminor&1; // to reset or not XX
playoverlay=((playminor>>1)&3); // 4 types of overlay
playspeed=((playminor>>3)&1); // 2 types speed 
playfreeze=((playminor>>4)&1); // 2 types freeze = total 5 bits= 31 total

1: // no speed
playreset=playminor&1; // to reset or not XX
playoverlay=((playminor>>1)&3); // 4 types of overlay
playfreeze=((playminor>>3)&1); // 2 types freeze = total 4 bits=15

2: // record speeds
playreset=playminor&1; // to reset or not XX
playoverlay=((playminor>>1)&3); // 4 types of overlay
playspeed=((playminor>>3)&1); // 2 types speed 
playspeedmod=((playminor>>4)&2);  //5 bits = 31 // for playback of speed

overlay:

0: 
overoverlay=(overminor&3); // 2 types of overlay
overrec=((overminor>>2)&3); // type of recorded overlay - total 4 bits = 15

1:
overoverlay=(overminor&3); // 2 types of overlay
overrec=((overminor>>2)&3); // type of recorded overlay - total 4 bits = 15

2:
overoverlay=(overminor&3); // 2 types of overlay
overrec=((overminor>>2)&3); // type of recorded overlay 
overspeedmod=((overminor>>4)&1);// - total 5 bits = 31

suggested for: play and overlaid - extra types of reset and types of freeze
any rec NO!


** 16/10/2023

- draft basic modes and see what mods can be made and then towards further dislocations...

- how to genericise as at the moment lots of repeated code.. and more when we do minormodes: *trial this in another file...*
- basic recordings and dislocations...

** 15/10/2023

- also alternate outs on toggle - for example also in overlay whether we re-record our own playback at diff speeds or same speed (we have to) // toggle???

or is this a micromode??? how would this work???

** 13/10/2023

modes we fill in with notes at top here...

- *that freeze and voltage are our LOCAL parameters...*

- *freezing voltage in overlay mode in general is a bit odd - what that could do - as a toggle in each case but of what ??? to ignore speed overlay as in 2???...*

- *also speed change in overlays make for chaos*

TESTEDkindof???TODO: 2: mode with global speed recording  // TO TEST/minors - TODO:freeze can toggle use of speed rec// or not in both playTO_TEST and overlaid

but we have no toggle on [6] voltage so that just reverts...// has no speed rec

also extra option of > for speed recordings - added but instead of modulus!

DONE with freeze... TO TEST - resolve mode 2 overlap:

// not to record speed changes in overlay (or other changes) but if we play back is also messy... also freezing of speed questioon

only as major mode makes sense: make it an option in play and in overlay to use that speed or not...*

- implement all basic major modes without freezes (well only in NADA) nor mods - to test these...


** 12/10/2023

TESTING: TODO: mode 2: generic speed from [6] recorded where (for all of them - speed overlay?) // q below of overlay...

- we need record in play on freeze as before - or always record in play

X//Q if we should record/playback in overlay or not as gets messy - NOT - so overlay stays same as 0 - *no as needs to read back speeds! or that is an option for major or minor*  !

DONE--> to port to 0 mode with all mods

/////////////////////////

// DONE: also good to have base major mode without mods - now in single.c // NADA is only one in this case with freeze

/// DONE: new mode 1 with NO speeds but with rec and speedmatch.... after we test all 0/// now [6] voltage has its overlay of playback too

Notes: 
- *we always need to record overlay in modes (not enough fingers)*

- basic NADA mode can be always the same. ////NOO:or we can use different resolutions (make these stay for rec mode)

but steppiness doesn't go into rec so far...

MAXBASE is synced minormodes across all...

DONEmode 0 DONE/TESTED/TODO:
- default is just freeze [6] as speed - lose one bit
- just have freeze overlay or stop play - lose one bit
- lose reset in overlay - minus one bit
- lose overspeed as records over slower 0
- lose overfreeze too

NOOO!- we could have recording slowing in overlaid too - TODO: trial - but only works when we use rec pointer! // so in not all overrec modes

///////////////////////////

// but [6] needs overhaul - it is speed or overlay - NOT both... - or
we have 2 major modes - one with resolution in speed/rec as we did
have ... // and in other [0] speed can be overlaid...

/// so in mode 0 we have NO overlay possible on [6]. freeze as speed, live "overlay" as speed

** 11/10/2023

DONE- test all of mode 0 minormodes: *but how to reduce number of these as there are too many for play/overlay?

maybe start from what is most playable - which options make most sense - major modes as playable options which are chosen, not just all options...

- start on new major modes - sketch out and then later fill in micromodes

DONETEST in overlay: TESTED:// that freeze of speed/overlay in play/over makes more sense than detach - TRIAL new layout and transfer to overlay DONE/TESTED

////////////////////

- working through minormodes to implement in 0: 

tested play// question of recording speeds in rec - continouus or... TEST simply - leave in for the moment

testing overlay - if we freeze overlay in regular approach then hits top after a few loops... // try overoverlay=2 > as default DONE: try that swop also in play?

// reset in overlay doesn't effect much as rec will be reset or not...

DONE:also question of max modes is dependent on mode (more or less)*

thus set say: maxplaymin[mode]=xxx;

FIXEDstrange freeze behaviuors - reset across all... and rec needs its freezer TODO/testDONE I think - test further

** 10/10/2023

*Notes for manual: that when we stop play in overlay then rec automatically stops!*

DONE: where is recorded already indicator - as we need to reset on new major: ender[daccount]

DONE/to use: Note: minormodes need to be kept for each state/eg. minormoderec // did we do this already? NO! defined but not used now...,

DONE: - first mode could do double-up of recordings as we don't record speed... TESTED/fine...

what are minor modes in 0/78 for each case:

see new_modes.org

TODO:
- to define major modes
- kaffe/timing/toggles

** 4/10/2023

- test again all trigger/timing and rec/play aliasings...

trigger/timing fails now

fixed with: 	if (helder>8 && breaker[10]>48) {heldon=0; newmode=1; modeheld=helder; helder=0;} \

48! there

DELB as 64 is fine in basic toggle 777 but not 778

// to test at intervals - somehow after reprog takes a while...

** 3/10/2023

- improving trigger/timing code at 24 divider - changed DELB which is pulse out delay for modes etc...

- sample/hold cap: V1/voltage is C9 - try 10nF instead of 1nF - this is first lower right volts out!

stick with 1nF (10nF on square wave gives offset???)

** 2/10/2023

After long break:

TODO:

- *trigger/timing tests with Kaffe again*

- DONE: mode time tests:

short: micromode inc
1-3: majormode inc
4+: full reset

TESTED with bad finger and timings now seem good - but wait for Kaffe

- define major and minor modes and code one example - what we have so far in terms of modes...

8 major modes based around use of top bits

x minor modes depend on major mode, freeze behaviours.

- *divider of 24: all timing settled on (re-check filters and aliasing):*

- fix complex relationship of divider, sample/hold cap, BRK, DELB and speed of whole - but now we run too fast - can slow down main loop but keep dac out faster...*

main.c:  TIM_TimeBase_InitStructure.TIM_Prescaler = 8; // ??? 

array size is: 9500 (div64=55secs/8=7seconds which seems quite short)

// how do we measure speed and how long array takes?

speed as mode 666: but why that doesn't work with writedac???

speed is 5 KHz = 10x per second in main loop which has 8 DACs!

now we have in mode 666 for each DAC: 675.7 Hz = *8= 5 Khz so figures - but we use new writedac2 which seems cleaner

675 per second = 9500/675/2=7 seconds which was our calculation above...

we measure now in case 667 as 7 seconds... 

// divider 8 is sample at 1.5K per section... - for 440 Hz we have /3 = say 24 divider whiuch should give us 21/42 seconds

*stay with 24 divider for the moment to match input filter etc*

// what are resistances for filter and for divider and triggers:

All triggers now: 3.3M on schematic // 4.7M on board
VCA divider: 1M (4.7M on schematic)...
CV divider: 1M
Filter: 47 nF and 15K = // if we sample around 440 hz we want 220hz low pass=47nF and 15K // do we want 50Hz filter = high pass...???
 
Sample hold on out is: 1nF // 440 Hz we have... 1/440=2.2ms /// try 4.7nF//10nF* no!

0805 C0G ??? 

- DONEfill in one major mode with micromodes*
- *all modes defined and filled in*

** 15/8

- chopping up gestures eg. *can use top bits to record a silent distance between gestures*

- *how to fragment, chop, re-organise, space out touch gestures in overlay*

1.freeze as seperator - space out
2.freeze as cut/chop remove segments
3.freeze as swop segments

*also define major modes by use of top bits:*

//top bits as plain extra record, as speed, as distance, as ghost//

** 10/8

- *new panel with 0.1mm gap and smallest circle, working well with my left-hand finger... to test with Meli/DONE-working*

// starting to define new modes, and minormodes, but question of *top bits:*

- always as speed? as speed in one majormode
- as our repeat or /other/ layer *like a ghost recording, a double, a mirror
- to double our recording length

** 4/8

minormodes need to be kept for each state/eg. minormoderec // did we do this already? NO! defined but not used now...

** 3/8

- major modes define freeze behaviour.

** 31/7

- after break // where was new freeze scheme -> in mode 7

- ORDERED AGAIN* / smaller 1mm gap centre///new panel...

still issues and adding new test code... for ref: PB2 is play (was rec on schema), PB6 is mode, PB10 (as FR3) is rec (so resistor for rec is r31) 
[own left hand 1st finger directly above]

** 17-18/7

- NOTES for panel testings: rec and play we swopped on base...
- 4.7M on that play now for testing as was too wild triggering with 10M, reverted to 10M but decide on this...

** 13/7/2023

- modes are behaviours of freeze/local presses - rec/play as well defined... // minormode as settings for each...

*eg. in REC: detachment of rec process/ stops/starts - so not all are synced...*

*to try islands again in REC to see if it makes sense // or is it too confusing to remember if we are in rec if is not recording // makes sense if we are past MAXREC*

- *why repeat [case 79] doesn't work out:*
// is it only a question of overlap?
// or store repeated section in top 16 bits layer...
// or just do/dont overwrite it...

** 12/7/2023

*TODO: check 78 - length of whole loop coming out of play/rec ???means what???*

- thinking about using top 16 bits of each recording/samples for other purposes:

also longer rec in some modes if we double up/fold over eg. if rec_cnt>...

*other possibilities: eg. we can 

eg. *TODO* *REWORK mode 79, we can store original loop there, and expand overlay in top bits*

*like a ghost recording, a double, a mirror*

*MODE81-TEST!: or it could also be the original and we make all overlays in top bits, freeze/unfreeze toggles between the two for each!!*

// tested mode 80 but both 78 and 80 seem to lose sync which is maybe ok (rec_cnt running) - *we can have different mods for this*

as speed changes play_cnt so we would skip samples, test sync on entry

// DONE:also exit from rec+play via play is odd as leaves us in rec- maybe that exit should leave us in nada - ie. reset play and rec to zero // done!

// offset ups it - changed SENSEOFFSET as was 1600, to 1800 for higher sensitivity

** 11/7/2023

- TESTED 78/79changed reset for overlay so resets to play_cnt and not zero of rec...

** 10/7/2023

- notes from below///repeat/overlay mode and start to define each major mode:

We have so far:

- older modes such as always loop/overlay to check out // *DEP*
- 78 as standard - to add freezes
- new overlays below: NON79DONE/TEST, 

80: TODO!

- define minormodes for each state:

// new notebook notes/TODO - variations on case 78:

- *TESTED_OK_MODE80overlay: we want to be able to overlay only one section of playback (and this section is fixed? how?) for each section?*

[start------------end] - according to rec...
[------][xxxxx][-----]
no play  play   no play
[   [freeze/freeze]  ]       

and same for rec - so ISLANDS of rec/play - and how this works for overlap?=just detach play/and/rec or just rec so we overlay only island

// does it make sense just for rec... sort of...? not really as default is rec which means a wierd start... or we default other way...???

// we also need freeze for NADA and for rec...

////
whereas detach is more stop and start

- detach play=stop play(or keep running but no playNO-as that would not unsync) so unsyncs that one
- detach rec in overlay and re-attach...
- detach play/rec=unsync

NON/REWORK NOW:TODO_TEST: MODE 79:local mode with different lengths but can repeat to full length with different overlays...*

eg. we keep looping but re-record overlay as one long section of repeats and changing overlays

[we could also do the same for the overlap record above - question of when overlap of repeat hits end of memory and overlaps there...]

simply= play as looped, re-record/overlay is full length. any variations on this?

*MODEX: tap freeze top in rec+play/overlay: record speed seperate and leave voltage free running (q of speed overlays or not), TODOsame for freeze on locals as another mode...*

/////

state/mode  | freezer

NADA        - freeze (default type is overlay/peak as in case 7)
REC         - stop(loop/local end)/start(extend) 
PLAY        - stop/start (unsync) - (and options to freeze play or keep counting but no playback)
              or start/end - loop/extend
              or as above if that differs from detach
            - use of rec voltage as speed or not (see above) 
OVERLAY     - overlay/simple rec
              overlay/no change ??? and as above/detachments      
	      stop.start (unsync) - but we have rec and play syncs/starts...

notes:
- in overlay freeze can stop and start overlay - see below - stop is no rec not reset below
- in overlay freeze can reset that section to 0 - so no overlay just re-record that section once then overlay (how?)

** 6/7/2023

DONE- remove rec0play0 logic from macros:

if (play && rec) play=0; \
if (rec && play) rec=0;			\
	  
// and implement new mode below for overlay on rec+play

DONE: tested fine but still question of rec+play, then we drop play and are just left with rec....

playing mode 78:

- we need way of detaching, extending sections in overlay... so is not such a clear loop across all...
- freeze in NADA, but not so necessary - other REC/PLAY/OVERLAY have different uses for that button
- in overlay freeze can stop and start overlay - see below - stop is no rec not reset below
- in overlay freeze can reset that section to 0 - so no overlay just re-record that section once then overlay (how?)

how we implement - as major modes or as bits????

** 5/7/2023

*REC and PLAY are global, freeze/control is local*

*all is global AND local now* - neither just local, nor just global - with modifiers (can still be major and minor)...

eg. On playback we decide we want to overlay - hit rec to overlay/keep
playing from position. stop rec, stop overlay but not play, play stop
stops all play, overlay/rec

*Instead of new mode 77: rec started during play is overlay* (play started during rec is also overlay?)

so we have 4 states:

- NADA
- rec/resets start of reccount, stop
- play
- rec+play: OVERLAY! stop rec: stops overlay, carries on playing// stop play: into NADA... (so are there 2 ways out?)

// or should stop play just revert to rec with no overlay// and reset on entry // but there is no entry as we are there, so carries on/extends.. ?
// *question of stop play returning to bare reset rec*

*and global/local mode of this with freeze as enter/leave overlay*

// In global/locals freeze mods play, rec, voltage/freeze and what else???

*modifier or major mode (as it is not bitwise maybe best as major mode)= what FREEZER (local indicator) does:*

- freeze (and associated behaviours of speed/playback freezers)
- detach=stop/start/sync playback of that section
- overlay that section/start re-record that section etc...

but also with modifiers for each so we can, say, *detach speed as playback*

*jekyll/hyde for top speed modifier - it has 2/several personalities* 

// 

** 4/7/2023

playing notes: that we want to choose when to overlay on the moment // freeze as overlay/stop overlay = global/local mode

also in 77 when we are in play - next rec can overlay... rather than reset no matter what...

// placed toggles in ==8 section // timing might need to be fixed

DONE>>>// checking back pin conns 

// +last of 4 VCA has wierd echo/drag - bad solder???fixed+

- new major mode definitions as:

TESTED/DONE:
NEW mode 77:

enter mode:
[usual no rec/no play]
[rec] - start recording with no overlay[so erases].
[rec] - sets length of overlay/segment and keeps recording overlay

[play]- plays back with live overlay
[play]- no play: stops playback

*TODO: also as local mode for each one - how? - also code more for states and transitions marked in macros*

** 3/7/2023

- ordered test pads for testing touch...

// playing with all modules: overlay is most important to have... but then we need to clearly reset... see latest notebook

** 30/6/2023

//it is->fix gnd plane as is not consistent*

- new top proto: rec is fine, play not, mode not...

also thinking sample and hold cap needs to be reduced as holds too long - steppy also but why? on transition 0-4095

with divider now as 16 or 8 in main seems less steppy/slow:

- *complex relationship of divider, sample/hold cap, BRK, DELB and speed of whole - but now we run too fast - can slow down main loop but keep dac out faster...*

// check for bleed in this case...

** 24/6/2023

TODO: fix toggles, basic operations are fine.... -> new panel ordered from aisler with filled inner circle...

- space out outer circle -> 1.5mm (approx) and fill inner
- [try larger circles with round middle for sensing, outside is voltage]

//- resolve minor modes:

- DONEdefault high sensitivity with no minormode
- case 7 in progress: default freeze with overlay: NON-try with different overlays= peak (default), add with >4095, add with modulo
- play freezes = regular voltage freeze as above, stop play and overlays, freeze play and overlays 

//- resolve toggling:

- find speed of main loop: 3 KHz (why when we do speed we remove cleardac)

3000/50=60

- now in main loop: test toggles in main loop with new timings

//- TODOmode with no speed fixes rec and play speeds only in rec...

//- DONEchanged speed of cleardac as main play loop effected highest voltage...

DONE//NOTE- in mode 2 speed-div seems too fast-should be fixed//tested*

** 23/6/2023

- FIXED/test/test/still major issues with mode - warbling... and gets stuck - changed some code and values but in the end we need to test again all fingers...

DONE/*TEST-all totest*-- TODO: test in new case 6*: New approach: lowest 3 bits minormodes are just set in no rec/no play.. play and rec bits are seperate and set there

////
Notebook notes...

do minormodes vary depending on state? yes

States:         // minormodes

- norec/no play: nada
- rec          :  rec speed / resets
- play         :  overlay/freeze/speed/resets
- rec+play:    :  rec speed / overlay/freeze/speed/resets

MAJOR: 
1-no speed changes... as case2
2-speed changes - as 2

** 21/6/2023

DONE/TESTED: TODO: sensitivity as new minormode - lowest one... implement/test //YES!now//but do minormodes work?

** 20/6/2023
-
DONE: TIMING of DAC - but stick to new one, check bleed // why is one module top 4095 voltage lower than the other? 4.2v on older 446, 6v on newer

DONE- check closing of VCA

DONE/TEST: CASE 5: looped rec/overlay: or rec starts that loop/play, and stops, and play just plays back/no recorded overlay, how do we reset? we start rec again*
what do we do about length tho? stops on rec of
or more rec is regular rec. rec off is overlay same size, play is just play*

can be different kinds of overlay....

case 5 is simpler than 9/and/10 versions- but use the two different overlays from there TODO*


*ISSUES to resolve:*

- fix on filter values? do we want to filter at 50Hz?

what is our current speed and how does that match DAC holds?

- waviness of finger (does that depend on resistance - increase of voltage size on pads)

- sensitivity/full range of fingers: shift in software...

eg. in macros
  real[4]=real[4]<<2;						\
  real[4]-=1800;							\

*-1800 gets rid of rec offset for overlays*

now just on lowest

1.2M just now for testing on lower voltage and VCA

- triggers - all 10M/done and fixed a bit in software


** 19/6/2023

- Kaffe has 6M finger (1cm distance) - so doesn't trigger, range too low - we can adjust range with pulldowns/// try also for triggers (we have 3M - can try 6M)

- 10M still works for triggers - just now on MODE (also tested on touch/toggle)... but 10M/3.3M/2M raises voltage/base offset...we can go 1M - try 1.6M = 400mV offset, 1.2M is negligable..
// we can try 1.3M

so we have 1.2M on lowest voltage and 10M on mode trigger - to test all with many fingers...

TODO:
DONE//TESTED as case 4 but implement fully for play too:TODO: freeze as additive. holds level on next freeze rather than releasing - is this more of a minimode: =freeze behaviours*
// not really additive but just not releasing

OK_RE_TEST how that works: 3//2: ???slower recording speeds - longer, steppy: 2 - test again

- also how modes 9 and 10 differ...???

** 15/6/2023

- fixing new hardware but now with huge bleed on DAC (was it there before?)// was 74HC4051//replaced and fixed...all tested...fine...

- rec etc pull up - why - is new panel with 47nF with 15nf but there is still a pull on both boards with any freezer // reduce delb!

** 13/6/2023

- latest new prototype and new programmer programming fine... to finish proto...

** 12/6/2023

PLAN: finish last modes, define all major modes, clean modes we have and add all modifiers, need to work on global/local modes (see above), and local modes...

- thinking more of start and end - as when we set length is more like just changing end//

DONE/tested:change 3 also for start and end: new mode 3
when we enter freeze is start/exit freeze is end

case3=DONE4 is just rec overlay version of this // or that can be a minor mode/mod - now is mod 64 bit
4) freeze = length of individual rec/loops rec with overlay... stop rec=stop all/reset
with/without recording overlay
eg. rec-record, play-freeze is start and end// if end<start then we loop round...

can also add modifiers to seperate speed/voltage

TODO from modes.org/below:
:
NON6) press freeze and plays back for that section the last x seconds (so always recording) - how do we determine the x seconds? (next freeze sets that?) - see modes.org
length of freeze sets length - default is full rec_cnt
// what then do rec and play do? 
// not so much sense as need to toggle rec.play
*this is version of case3 with freeze as just setting start->end/length???*

*16) freezers free/detach that section or start playback again in that section... again with overlays (what then does play button do?)
[ play button plays them all!] - is as 15 above but we need to add rec overlay section// play counter shouldn't keep running or that is minormode*


** 9/6/2023

*problem with kaffe finger triggers multiple (not 50Hz) modechanges on top mode (others fine):*

- q of pullup/down: what is it? 3.3M pull down could be tested with 1M - test on R34
- will new gnd-plane solve it?
- do we need add lower gold (as finger hits full circle first)
- maybe works better with ms held also
- check mode code against others // changed 9/6 - to be re-tested just for mode with different fingers

DONE-seems better//re-test with held timing // new test code

///

*new modes copied from below:*

TESTED/DONE3) how to set length of play - at moment just plays until recend... freeze sets end of play... // but next play will reset that to recend

///these will need different modifiers for freeze almost
////
4) freeze = length of individual rec/loops rec with overlay... stop rec=stop all/reset

////5) global/local: freezers rec/stop rec of additions over top of global in rec or playback???. or change/cut the length of that section - more like 4 above that cut

** 8/6/2023

Added in case 0 (now new template): 

new modifiers: 
32: freezes speed/not real, freezes real/not speed
64: freeze stops playback/freeze just for overlay

- DONEfreeze options for speed*

as in mode 19 above also differing behaviour of freeze in playback -
freeze holds playback but not overlay, freeze holds overlay(we have
now), freeze holds both=2 bits??? but 00 is none* re-implement
freezers* re-test changes in mode 20 to freeze*

- see below...

notebook notes:

- DONEQ - add modifier for top speed: freeze just freezes speed, freeze just freezes voltage

TODO:

- NONstack of each frozen value... freeze adds to stack (bit doesn't
  freeze). how do we move through the stack (at speed x), use modifier
  to move thru stack... - how many max values?

- should minimode reset to 0 on each major mode change? - depends on last mode

- can we have local minimodes (eg. touched on by freeze?)????

** 7/6/2023

DONE: changed order of speed bits so these are lowest 12 and overlay is 3 - see case 0 for example...

modifier for freeze on 6 is a bit odd//removed - also as we can have frozen
value and changing - normally in freeze we just ignore changing so we
can have 2 sets of values in a way... frozen and changing under the freeze - cannot be added but how could we use this... speed as the underlying or vice versa*

DONE: TEST!-mode0-modifier could also be if we use live vs. recorded [6] as in [18] and what about overlap??? - just add it


/////
//- what modifiers could be for NO speed - we have 2 speed bits spare!
TESTED modeinprogress-2-what to do with those bits in NO SPEED? - change resolution of rec as in mode 8*

- so mode would be 2 bits = speeds from 1/no div to /32

** 6/6/2023

10ms-1s tap =minor
1s-4s = major
4s+ = reset all

DONE//TODO: test taps, this will change mode layout, 

- started on mode 0 with 32 options

new modes...*

** 5/6/2023

DONE:long or short mode taps for major/minor modes - longer tap was reset and back to mode 0!

older notes:

USE OF REC/PLAY in locals: so far: sync rec or play (which)... /and/ rec can be enter speed record mode for all sections, playback???*

on freeze: that frozen levels are saved to a stack and can be popped off the stack, various over-rides...????*

voltage as speed: makes more sense for individual modes as what if there is nothing recorded... also for record loop then speed...*

TODO:[global rec with local play // global play with local rec (all sync/loop)]*

- start to define a way through all modes and check/add - we have/or/implement:

DONE//1) no reset for rec [or] play counters on next rec/play - check 21 and add for play//added as minormode!

DONE/TESTED2) overlay on next rec only (with/without reset - so without reset overlay would carry on from end of last rec...)*

if no reset then this changes length of rec/play, reset version also changes length as we can go over // *CASE 1: add no-reset opts*

3) as aboverec again changes length of rec with/without overlay ????? means what??? means no re-rec just length or overlay, play could also set length, length of play!!

4) freeze = length of individual rec/loops rec with overlay... stop rec=stop all...

5) global/local: freezers rec/stop rec of additions over top of global in rec or playback???. or change/cut the length of that section

from modes.org:

6) press freeze and plays back for that section the last x seconds (so always recording) - how do we determine the x seconds? (next freeze sets that?) - see modes.org

freezers free/detach that section or start playback again in that section... again with overlays (what then does play button do?)
[ play button plays them all!]

** 23/5/2023

DONE/TESTED:TODO: potential full reset mode if hold mode down >4 seconds... test with beep!

** 20/5/2023

TODO: new modes:
DONE:- global and local: freeze copies previous section ADC - copy as we play back into rec buffer, unfreeze just stops this process

DONE/test in full but seems ok: alternatives: freeze just plays back with own overlay the previous section ADC (does not copy), unfreeze reverts to own record...

DONE/tested- these also suggest another mode which overlays the previous one on playback - so adds the 2 recs...

older notes:
1- global rec/play + speeds
2- global rec/play and local speeds
3- local sections
4- loop all in constant overlay/type loop

+ modifiers

** 18-19/5/2023

notebook notes:

- define global and local modes // and modifiers: speed, addition etc.
- how zones/areas could work eg. divide in two (left and lower, right and upper) and one is speed for other...

23testedTODOmore- overlay mirror: all follow say lowest/bottom voltage 0 but add own
  overlay (live and/or in recording/playback - what makes sense
  here) + rec/speed versions of this
and variations on this eg. all voltages only, all VCA, all

TESTED-case22:- slew which doesn't wait until target - how to do rise and fall independent speeds??

** 16-17/5/2023

*testing new prototype - now all working but a bit more noise than before, maybe gnded panel will fix that more... TEST*

DONE:panel black mask doesn't match PCB we have mask006 - doesn't render/plot as gerber??? where is original... slow render and ordered with GND and new mask 19/5

- records for around 26 seconds with 9000 array = 346 per second 346hz  // 35 seconds with 48 divider-> check noise here...

// with prescalar of 64 we reduce noise, and could hit around 1 minute if we reduce memory a bit...

- fixed timing so now runs at 100 MHz (faster than 466 - which must have been at half speed? 80MHz or so...), no need to adjust anything

still have 200mV noise/jumpiness

///

// 413 is 100MHz - do we need to change our core timing.. 

//at the moment nothing runs... no debug info...: bad soldering//checked again? startup issues/BOOT1 but is same as 446, clocks but default should run...

// fixed with new system file... system_stm32f4xx.o replaced by system413.o  but seems jittery - play with timings

- also all voltages out have an offset of 100Mv (200 with usb attached). 

offset is in ADC - fix in software - not needed on VCAs

////

- check all voltages: 0 is 0v, 4095 is 6v: fingers: 

VCA: finger is around 5v

- check we run at 100 MHz (DONE) and check length of memory...

and we need to fix 1st, 3rd, 4th VCAs on board...

VCA0: 4.3v
VCA1: 4.3v 
VCA2: 4.3v 
VCA3: 4.4v 

// test against other base board: no offset in ADC, 100 Mv noise/not jittery... peak just over 5v on finger. vca finger is 4.8v (lower left dusg)

** 15/5/2023

//DONE: TEST:19 new global:* if we are in playback mode, freeze holds playback/rec voltage...

2 different kinds of freeze: freeze which stops movement, freeze which just holds... TEST:20//2nd kind

- TEST: 33: local: rec freezes all, play resets all counters, also now add 34: rec freezes playback as 19 and 34: that alt one above UNTESTED

//DONE- TEST: 21: global: no reset of rec cnt


- locals now at 30+

- new HW:* first prog tests: F413GTx (320k so we now go from 3800 samples to 9000+ - how fast is 9000, to time?)

at first couldn't program with openocd then after using stlink seems to work???? problem was with openocd???x

//older: with prescalar of 32 we have 22 seconds (so not quite with our calculations) - was that for the 17 secs...

** 9/5/2023

- 8 or 16 basic modes to define for local and global*

DONE:// add global mode where we also just use recorded top voltage as speed (freeze to attach detach that)...// testnew18!//mode numbers shifted...

x4= x2 speed up/lowest up // x2 overlap modulo/peak

+ we have no reset of rec_cnt as extra mode only

TODO: list all modes, test new HW, test new sets of local modes and narrow down modes...

** 8/5/2023

DONE: mode17: TESTED_TO TEST* TODO++ last of globals: freezer shifts start of each particular section towards the end...*

- start on local modes 18+ but still question of what we do with rec and play???

mode 18: DONETO TEST* - *as below for rec/playbacks. note we don't reset rec_cnt - 2 options there

freeze: record, tap again: playback

play: global stop/start all playback (also sync)...
rec: global rec (nada if we are already in rec)...

- check all globals and it.c

** 6/5/2023

Note from PCB:

Notes: that frozen levels are saved to a stack and can be popped off the stack, various over-rides...????*

** 4/5/2023

DONE/test: slew is interpol to target (if we ignore successive targets until we reach it), on way to wormz, for globals and local, not in rec but overlay/playback

- notebook notes:

DONE-revoke lack of overlay on 6!

- how we do speeds in local modes?

-> global speeds from top as in global for all
-> no speed
-> speed instead of overlay = rec tap freeze, play tap freeze - now voltage is speed
-> speed recordings

global speeds=none, on top voltage, individual, recorded

-> do we need resets = maybe make it more developing!?*

** 3/5/2023

Q for locals of what rec and play do - otherwise we replicate functions of globals*

- what are local modes - as versions of all globals:

          GLOBAL    | LOCAL
- no speed-speed/types of speed/types of overlay
- loop and overlay/types
- speed is recorded // when and where?/types
- slower rec
- detachment etc

what do rec and play do in locals?*

- as rec/play are GLOBAL - could also be sync starts
- rec can be enter speed record mode for all sections, playback???

global modes so far:

0 - no speed. overlay is peak.
//1 - no speed. overlay is mod.
2 - global speed = lower up. overlay is peak.
//3 - global speed = lower up. overlay is modulo
4 - as 2. speed=slow
//5 - as 2. speed=fast

6 - globalspeed=slow speed. slowed record 
7 - local speeds on each voltage 
8 - no speed/fixed slower rec ??? comp to 6? why...

9 - looped with speed=fast - 9 adds to rec value from speed new value
10 - as 9 with different rec scheme - what they are? - 10 adds to rec value new value

11 - record speed. speed is lower up (additive and can be modulus)
12 - record speed. speed is lower up. differs from 11 in adds recorded speed... (additive and can be modulus)
13 - freeze overdubs a section in playback mode
14 - freeze records new section
15 - freeze detachs section

16 modes... x X for speeds x4, x2overlay peak, modulo = x8


x different speeds/different overlays if necessary

speeds: none, faster, slower, starts slow

- other modes todo from modes.org and check it.c*

//NON!-4- freezers reverse their own section???

target, speed of trying to get there...==DONE:TODO++ variable slew towards target*


** 2/5/2023

TESTEDcase 11: problem is rapidly hits highest speed - speeds do reset on new record as we write over this...

TODO: 

-DONE mode12: record in loop on freeze and unfreeze is detach from speed...

- DONE13DONEOK, 14,15: global/detach mode... rec and play as usual:
14 is now not overdub just record anew!

to overdub a section only-freeze, to free/detach/pull a section out of playback, re-attach // can this be on same mode?
check rec_cnt vs play_cnt - as for overdubs need to be in sync

//////

- start on local modes, idea of groups/up.down//right.left also???

** 28/4/2023

DONE- case 9 and 10:loop mode: - mode which is always
recording in loop (and type of overlay - start with modulus), and
rec/play buttons (length of holding down) set start and end points?
also as variable speed mode,,, bit odd as folds back on itself - 2
different versions of this, also with/without speed...

DONE/case 11: 
how we can record global changes in speed... tap of freeze on top speed one... additive speed recordings
- question of what speed we use to access recorded speeds... not so simple...

but again for any additive rec we would need to clear that. how to time clearing speed? speedtestDONE-just clear one

/// notebook notes:

- freeze: 
as freeze
as detach -> leave playback, reattach back into sequence
as re-record -> that section until next freeze
as reset -> of section to blank, see how long that takes...TEST! rec will blank so only makes sense in certain modes
what else?

- how we deal with overlap? - over-record, I think this is default when we over-run // add-rec is option
- loop/rec/add - as limit4095//as modulo

- add speed rec - how we start stop // order of:
  recO->playO->speedrec? or playback is always speedrec in that mode,
  length is length of rec, detach from speed/from rec

- where is reset of each set of recordings? and where do we need it?

** 27/4/2023

- what we need to do when we change modes - eg. lastrec and lastplay...*

DONE: diodes added on base PCB in new dir // to order and test...

- DONE-LOG/and fixedlog//decide on linear or log speed across all? generate test arrays...
- DONEnew log array for just additive speeds 1-16 test in: case 5:

DONETESTED- case 7: voltage as sectional speed only on playback - differs for different adcs TESTING?
*voltage as speed: makes more sense for individual modes as what if there is nothing recorded... also for record loop then speed...*

or 2 taps rec...

- DONE:case 8rec slow down count (with fixed speed) - test - was which one... 6 has speedslow...

//

how and where do we record individual speeds - in loop...

- list what modes we have or can port and how these can be modified:

////////////////////////////////////
//recent notebook:

Divide modes global and local...

- detach a section, what that means? re-record that section only, leave that section as live/unrecorded
- loop of rec and overlay - key is length of loop and how to determine this

          GLOBAL    | LOCAL
-no speed
-speed
-loop and overlay
-speed is recorded // when and where?

// detach - global becomes local

do we still use rec and play in local modes - eg. rec starts possibility to record, play plays back... see each case...

x different speeds/different overlays if necessary

speeds: none, faster, slower, starts slow

** 26/4/2023

TESTS as below:
- DONE:test resolution...  seems high enough at 32
- DONE case 4: subtractive speed (need new log scheme there - how slow... 1/64 - // fixed bug in speedsample

- DONE case 5: change speed of global recording - but we get a jump if we change speed from voltage there... so we could have fixed sets of record speeds in modes...

this is also is general issue of all simultaneous recordings - why we need independent recordings and free/detached play/over-recordings...*

question of speed and ram - leave open for now...

static uint16_t recordings[8][7000]={0}; // 

but we wanted top bits for speed and we have 12 bits for values??? which leaves 4 for speed....

// new stm - F413 is 100mhz, 320kb, STM32H7A3RGT is ++mhz and 1184KB , H573 are pin compatible... much more memory

or 413RGT6 has 320k and is available at farnell

we have 128kb ram... on f446 // 

//////////////

- panel filter pcb doesn't match schematic so it ALREADY has 15k there so we just need DIODES (so no need for extra resistors there) - base or panel... base?

but we would need for freezers and any other pins exposed - 10k but should be fine...

** 25/4/2023

TODO: port/draft new modes eg. individual speeds of global sections, play/overlay each section, individual rec and playback...

types of overlay: modulo, peak

speed: additive, subtractive, adds from below (which is what we had) 

how we can record changes in speed... tap of freeze on top speed one...

from earlier notes: - DONETEST: also do we have functionality to change/slow down speed of recording - so jumps/blends=interpolates like a slur of values...

- also question of voltage of each as speed of section in playback - as we need log and is odd mix... 0-3 is already log, 4->7 needs shift and log

// if else i guess

TODO: 

- new touch panel // or could be on base with protection diodes and resistance

todayDONE:

- added ignore top bits which we will use later

- DONE**full open and close of VCA - test on lowest one -> R26 OUT1TOMIX -> 27k tested, no bleed and full voltage (changed on PCB/schematic - but lots of errors to fix there)

- max for our finger is 2.2v (so just 11 bits but that leaves us short)

- log for vol, linear for value... - so do this in macro...

// check voltage range from VCA bottom bit - we hit 1.5-2v
  
so for VCA let's stick with log approach and other is linear

** 24/4/2023

DONEcheck VCA full range, adjust parts

Note: all adc is 12 bits but we treat as 10 bits ... how high do we go?

- note that we don't get full VCA voltage out - do we need to re-adjust this? - see notes below at 4.2v - can we fix this in control...
// or maybe just adjust final amplifier res to say 22k

- full voltage out-> 5v checked...

- does speed freeze...? no, should it just follow our CV?? this could be option - we try and works well with freeze

// logspeed goes from 1/8th to 4x speed...

- use of top bits for individual speeds...

//
- freezer as way of detaching rec or playback of each section
- if we are in playback can be ways of touch adding or modulating playback or use voltage as individual speed or another factor (like length of loop)

eg. touch is not adding any voltage, but changing a parameter = speed, length, what else?

- type of overlay - modulo, additive, subtractive


** 20/4/2023

- DISCARD->NOT working - as always jumps up on freeze... that after freeze we can still add value to freeze as a
  baseline. makes sense for VCA (and voltage). otherwise the pad does
  nothing and can always be left alone. To make sure all modes make
  sense, even if not sure which mode one is in...

** 29/3/2023 TODO:

- start to define tasks from below:

-basic functioning: what is prescalar, how long do we want top record for, what is frequency resolution, any artefacts, speed up and slow donw
-define timings and check all mode/freezes etc.
-define and implement modes
-BOM, assembly...

- use debug to figure out rough rec speed? every 6 or so seconds // prescalar of 8

with prescalar of 32 we have 22 seconds (so not quite with our calculations)



*which prescalar?*

- test logspeed and speed modifiers (speed starts from slowest?)

** 27/3/2023: REVISIT2

TODO:
- re-check basic functioning
- HW and washers - as we don't seem to use them: tested now with one washer and is fine..., BOM/update any footprints (what are ones for assembly:

Housings_SOIC:SOIC-8_3.9x4.9mm_Pitch1.27mm

SM1206POL

which is correct base PCB - last one?

- re-acquaint code - how well it works as basic and calibrate speed again...
- list of new modes to do in new_modes.org - check older code, modes lists

it_strip.c

- how to make sense? eg. speed ranges-logspeed, 1/8 speed, top bits ???

- top bits are used in modes in it.c for individual speeds
- range is logspeed - check this, 1/8 as we run through 8 DACs
  sequentially..., top bits were reserved for individual speeds...

- how fast does it run and  how many seconds of gestures by default???

7000 values in each array: 2kHz we say (at 32 pre-scaler to check as was last at 8): and there are 8 sections so each runs at 2k/8=250Hz

7000/250=28 seconds... TO CHECK!

*older below*

** 4/10/2022

- also do we have functionality to change speed of recording - so jumps/blends=interpolates like a slur of values...*

** 20/7/2022: REVISIT

- test what is working: basic functions, freezers, rec/play but is 1/8 speed correct - re-test as 1.0

- where are we up to with speed ranges - we have logspeed

- check/test code for mode switch and re-acquaint code: top bits to implement, basic schemes

- what modes still need to be implemented: list these - see modes.org for list there and older code...

** xxx

30/12/2021:

- switched over to HSE in system_stm32 rather than other clock init and seems to work fine but will need to recalibrate timings/re-check but freeze works

20/12/2021:

// so we might need to tweak the speed array but bleed is now SORTED!

- so no bleed with freezers as these don't involve the adc - what about on additive playback?TESTED fine 

- DONE:but we need to re-do speed as was for old adc scheme

17/12/2021:

SOLVED with single ADCs and lookup arrays.. 

- remaining bleed is in ADC array ... 

- note that 0 should be 16mV but we have 88mV with << scheme and single ADC

single ADC reduced bleed with <<2 to 88->112mV which is 24mV

single ADC fails to read case 2 channel 5???!!! - FIXED with disabling DAC channel 2

still slight bleed - lookup for values so we keep bottom low (try log too)

16/12/2021:

- speed code is re-written also now with logspeed to try out...

TODO: trial with all caps replaced for bleedthrough etc - 1NF DONE

still bleedthrough but is that anything to do with caps... (see how small we can go with c9 - 100pF?)

TODO:

different fingers for vca, 

also if we can change vca so opens a bit more: values there R52 was adjusted from 47k to 10K maybe trial other values

20k now we have and seems ok

15/12/2021:

- need to add overlap flag for rec and playback...DONE

- problems with speeds and aliasing so need to rewrite code without 32 steps

- try without the 32x slowdown for record (and speed will skip samples)

so we need 8x say upwards of 1KHz which is 8KHz in main loop

we have:

  // 1024/4 is 8x 862Hz (toggle speed so 2x that which is fine for us but we need to lower the sample/hold cap...

replaced c9 with 1NF (from 47NF)

1.6k=4 seconds..

14/12/2021 

- CV out peaks at 6v - 6.6v is our maximum for 4095

- VCA 4.24 VPP for 5v signal (4.6v is 4095 as I guess we close the VCA a bit) but we can only get to 4.2v on first VCA

- aliasing always - we need to re-think all speeds as DAC can only run up to 100 Hz

/// reduce capacitor in sample/hold from 47nF


+input filter is 15nF and 15k so gives cutoff of 700Hz x2=1.4KHz which is fine+

10nF would be low pass of 1Khz

22nF 500hz

if we sample aorund 400 hz we want 200hz low pass=47nF and 15K???

but rec is 32 times slower and each dac is x8 so that is 32x8=256

in theory is then 8KHz / 256 = 31Hz so aliasing

- so we make everything run faster but really need to resolve all and be very precise of speeds (filters in recording)

- what do we need to get to 1KHz - 256KHz clock

what is max recording again? if say we record at 1 KHz - 7000 samples is 7 seconds...

// need to check we run fast enough for that clock, alternative would be to software filter for recordings
