* TODO:

** 10/7+ MODES

*how to define - behaviours which are then modded by freeze behaviours...*

major modes:

- 78 default overlay
- speed/no speed/slower rec speeds... how we handle speed is major question

- local speed on voltages (could even slow on mode taps): - where we get speed from (eg. speed for each voltage comes from VCA of that section)
local speed recordings? see which mode...?

*TODO: tap freeze top in rec+play/overlay: record speed seperate and leave voltage (q of speed overlays or not), same for freeze on locals in another mode...*

- thus add: global speed recorded seperately in overlay
- fragmented/repeat overlay (segments we can call this)
- +looping always - what do rec and play buttons do and freezers???+
- mirrorings

- and are different freezer behaviour modes major: eg. detachment etc...

// recording speed as different to voltage it is recorded on...

minors:

play: overlay, resets, speed setting, how we deal with speed
rec: resets, rec speed
rec+play: type of recorded overlay(see cases 9/10), speed dealings

speed as key in play/rec+play (what we have?):

- logfast/logspeed(slow-add from below)
- freeze on [6] freezes speed, freezes value
- split [6] as rec speed/rec voltage (eg. rec speed only, *rec voltage only*, frees) - levels: freeze, rec, freerunning


** hardware

- +12v:75mA
- -12v:50mA

** DEFS

*define global/local modes - maybe another way through LUNAR*

define clear modes which don't change functions too much - what we want to achieve... - any influence from lunar, geomantics?

how many major modes? say 16= 8 global, 8 mixed/local // minor modes= 8 bits/255 so far // or less

** recent july notes/playthrough:

- *78 is new default with freezes and minormodes!*

Now we have 4 states and all as global/local (as rec/play always global unless we think of local mods of these so they mean different things for different segments)

freeze button is what makes it LOCAL: local stop start in each mode (but how that overrides...)

play/rec detachment are more major modes, as is loop/rec // if these still make sense...

** characteristics/parameters to work through:

rec/play: speed, length//start-end, counter, mirrors, overlays, freezers do/behaviour, resets of params...

local/global. sync

ways of changing speed, start/end

or from point of view of each section: speed, start, end, what freezer does...

Simplify as conditions of:

real[daccount]: adc input // modifiers // freezers // play/rec // speeds

no play/no rec: freezer behaviour=type of freeze
play: overlays, freezer behaviour, resets, start and end, mirrors, speeds
rec: speed/slew, live overlays, freezer behaviour, resets, type of overdubs, start and end, mirrors, speeds
overlaid: 

behaviours of speed control: freezers, recordings/overdubs 

rec with play, play with rec [to record overlay we need to hear what we are overlaying on]

link of rec and play...

///

- modes as they come, more about how to divide different areas now... can also be say top and bottom[???], left and right. 4 sections

- check which modes we need to clear rec (if is not going to be overwritten anyways)...

- review modes and what we have,,, what are additional options for speeds and additives
- what needs to be set or reset when we change modes
- init and zeroing of key arrays if any...
- streamline playback when we have base modes - see single.c

- all modes, tests
- test timing in main/divider - decide on /64 divider for 1 minute - q of resolution??? now we have 32!
- *test with different PSU and hands/fingers*
- +DONE//add protection, re-test PCB - also with new processor F413GTx,+
- BOM and order
- manual: layout and list of modes somehow... touchable, overlays//holes, cutouts...

TODO2: test with new fingers, new modes around areas, geomantic?, finalise modes and modifiers

** OLDER:new major modes (and mods where we can)
GLOBAL:
1: basic/simple mode with all mods: 0 or *now 7*
2: overlay on each rec: 1 // *or is that maybe as minor?*
3: ????slower recording speeds - longer, steppy: 2 - test again // unsure as is behaviour change...
4: no speed on [6] at all....???

global/local4: detach play: 15

5: looped rec/overlay: XX9/10->new case 5 but also with alt overlay options
6: record speed seperately: 11/12
7:
8; mirror - all follow one voltage[lowest=4] and overlay own... 23?

GLOBAL/LOCAL:
1: length of start/end (global/local tho!) - 3
2: freeze overdubs/new 13/14
3: freeze detachs playback 15 - is above
4: groups and reflections -mods could determine which group we use?

LOCAL:

*TODO: ADD: local speed recordings - can use [top voltage] or local section's VCA*

** catalogue modes and modifiers

// modes in code so far:

GLOBALS:
0: freezers, overlay=peak, speed=fast etc...

XX8: fixed slower recording speed - all fixed speed - TRY change one speed...- added that change 

9: looped rec and overlay. always rec. peak overlay, fast speed: recordings[daccount][rec_cnt[daccount]]=values[daccount]; [values also adds real but is different as speed dependent]
10: looped rec and overlay- different rec scheme. slower speed: recordings[daccount][rec_cnt[daccount]]+=real[daccount];

11: record ind speed on freeze top - always play back speed and re-record on freeze
12: record ind speed: how differs from 11?CHECK? - this one is overlap - does it make more sense than 11? 

13: freeze overdubs in playback // otherwise?
14: freeze records new in playback - can be option?
15: freeze detachs section from playback - play counter still runs... // could be otherwise - see below

XX16: slew ???

??17: freezer shifts start of each particular playback section towards the enda

XX18: recorded top voltage as speed/fast - see 11???
XX19: freeze holds voltage in playback... // not overlay  - as minor mode????
XXX20: freeze holds voltage in playback... still moves on samples...

XX21: as 0 but no reset of rec_cnt, so adds to end of buffer - now as minor setting

XX22: slew which doesn't wait for target TODO:how to do rise and fall independent speeds??
23: overlay/mirror???

GLOBAL/LOCAL: groups and reflections
24: freeze just plays back with own overlay the previous section ADC (does not copy), unfreeze reverts to own record...
25: freeze copies previous section ADC - copy as we play back into rec buffer, unfreeze just stops this process
26: overlays the previous one on playback - so adds the 2 recs...

LOCAL: to be better defined... *TODO: more also as looping/overlay??*
30: freeze: record, tap again: playback
31: freeze: record, tap again: playback *difference 30???*
32: reset rec_cnt
33: as 30 but - *rec freezes all, play resets all counters*
34: as 33 but rec holds playback
35: alt hold as 34...

LOCAL is more about how to use REC and PLAY buttons: as freezes, as resets

*TO ADD: new modes: with modifiers TODO in most cases:*

2-no speed but bits mod rec and playback speeds...

//

MODIFIERS for modes (where relevant):

1.types of live [or recorded] overlay: modulo, peak
2.speed: none, additive/peak, (subtractive), adds from below (which is what we had) 
--->in speed mode++++if [6] is subject to freeze etc. and thus effects global speed? *could be if we use rec speed or not...???*
3.reset or not rec/play counter (2x modifiers) when we enter/leave those...

= 2x overlay x 5x speeds: none, add, add from below, add/freeze, add from below/freeze x4  reset = none, rec, play, both
= 2x5x4=40 modifiers = too many or is more like a journey

now we have major/minor split of modes

default bits in mode 0 // 9/6/2023: 8 bits

*CHANGING/UPDATE*

12-speeds: add=logfast, add from below=logspeed, speed as real or recorded // playback
3--overlay:modulo/peak in playback and also see freeze behaviour below // playback
45-resets: play, rec // rec and play
6-freeze on [6] freezes speed, freezes value // can also be other seperators of speed/value - freeze dependent // playback
7-freeze stops playback, freeze holds overlap //= playback
// *TODO:freeze stops playback, freeze holds playback value, freeze holds overlap - how to do this?:*

*in case 7 we have now for freeze behaviour:*

- stop/start playback
- toggle/hold playback voltage
- hold/release playback voltage
- TODO:hold overlay voltage - as toggle // but this excludes other bits... how to deal with that... last cases...

now [case 7 to expand and 0 to lose] we have:

no sensitivity and new default freeze in no play/rec so no minormodes

minormodes for rec keep seperate to play...
 
*-extra bit could be: record overlay or not? or keep as major mode...*

1 2 4 8 16 32 64 // 128
1 2 3 4 5  6  7 // 8
??? We use NONE speed as major mode option -> 5 bits=32

///

- global rec/and/play
- local rec/and/play
*[global rec with local play=detach15 above // global play with local rec (all sync/loop)]=13 or 14*

- loop rec/add/overlay always

// *parameters to combine and to use to define modes:*

modifiers/resets, length of rec, length of play(same as length of rec in some cases), overlay on 2nd rec (with/without change of length), speed

what can cross global/local: freezes, lengths, start/stop/sync, record of overlay or not, copies and groups

// define as: each section (defined as local.global.groups) has: 

what we record (eg. overlay), what we playback (eg. live overlay), start and end of rec/play, speed of rec/play, freeze button, reset or not of counters

** finger catalogue - testing with 10M triggers, 1M dividers lowest vca/voltage, 47nF board, 32 divide, lowest sensitivity:

other module toggles will change so have range: 1, 2.2, 4.7, 10 from SW4(bottom) to SW1(top)

reverted to 4.7M for toggles on main touch (should do same for touch toggle)

me: 470K all works fine but just on voltage pad, no touch to voltage we have 200mV 50Hz (using 15nF board and 32 divider)

TRYING now with top panel with 47NF- hardly any noise (retry that with K) - but that also has 1M on lower 2 dividers (not 1.2M)

Kati: 2M finger measures // touch/toggle brd: 10M works, 1M unreliable // voltage: max 4v wavy // VCA, fine at 4,4v // we added HELDER=4 to macro mode code // rec/play etc. fine

[rec, play, freeze still at 3.3M-now updated to 10M]

Kaffe: see below...

Chris: 3.5M, // touch/toggle GOOD! // 4v or 5v // perfect toggle! 

Rich: 3M // touch/toggle: jumpy!! // toggles // voltage 4v, medium noise // toggles all fine 

UNK: 0.6M // toggle fine all // voltage 6v  // toggle fine... 

Meli: 18M //touch toggle a bit jumpy - 4.7M maybe better, also touching GND works well (as a possible solution) // voltage 6v // toggles to test with new test board

** 12/7/2023

- *thinking about using top 16 bits of each recording/samples for other purposes:*

*also longer rec in some modes if we double up/fold over eg. if rec_cnt>...*

eg. *TODO* *REWORK mode 79, we can store original loop there, and expand overlay in top bits*

*like a ghost recording, a double, a mirror*

*MODE81-TEST!: or it could also be the original and we make all overlays in top bits, freeze/unfreeze toggles between the two for each!!*

// tested mode 80 but both 78 and 80 seem to lose sync which is maybe ok (rec_cnt running) - *we can have different mods for this*

as speed changes play_cnt so we would skip samples, test sync on entry

// DONE:also exit from rec+play via play is odd as leaves us in rec- maybe that exit should leave us in nada - ie. reset play and rec to zero // done!

// offset ups it - changed SENSEOFFSET as was 1600, to 1800 for higher sensitivity

** 11/7/2023

- TESTED 78/79changed reset for overlay so resets to play_cnt and not zero of rec...

** 10/7/2023

- notes from below///repeat/overlay mode and start to define each major mode:

We have so far:

- older modes such as always loop/overlay to check out // *DEP*
- 78 as standard - to add freezes
- new overlays below: NON79DONE/TEST, 

80: TODO!

- define minormodes for each state:

// new notebook notes/TODO - variations on case 78:

- *TESTEDOKMODE80overlay: we want to be able to overlay only one section of playback (and this section is fixed? how?) for each section?*

[start------------end] - according to rec...
[------][xxxxx][-----]
no play  play   no play
[   [freeze/freeze]  ]       

and same for rec - so ISLANDS of rec/play - and how this works for overlap?=just detach play/and/rec or just rec so we overlay only island

// does it make sense just for rec... sort of...? not really as default is rec which means a wierd start... or we default other way...???

// we also need freeze for NADA and for rec...

////
whereas detach is more stop and start

- detach play=stop play(or keep running but no playNO-as that would not unsync) so unsyncs that one
- detach rec in overlay and re-attach...
- detach play/rec=unsync

*NON/REWORK NOW:TODO_TEST: MODE 79:local mode with different lengths but can repeat to full length with different overlays...*

eg. we keep looping but re-record overlay as one long section of repeats and changing overlays

[we could also do the same for the overlap record above - question of when overlap of repeat hits end of memory and overlaps there...]

simply= play as looped, re-record/overlay is full length. any variations on this?

*MODEX: tap freeze top in rec+play/overlay: record speed seperate and leave voltage free running (q of speed overlays or not), TODOsame for freeze on locals as another mode...*

/////

state/mode  | freezer

NADA        - freeze (default type is overlay/peak as in case 7)
REC         - stop(loop/local end)/start(extend) 
PLAY        - stop/start (unsync) - (and options to freeze play or keep counting but no playback)
              or start/end - loop/extend
              or as above if that differs from detach
            - use of rec voltage as speed or not (see above) 
OVERLAY     - overlay/simple rec
              overlay/no change ??? and as above/detachments      
	      stop.start (unsync) - but we have rec and play syncs/starts...

notes:
- in overlay freeze can stop and start overlay - see below - stop is no rec not reset below
- in overlay freeze can reset that section to 0 - so no overlay just re-record that section once then overlay (how?)

plus modifiers:

notes on mods:

** 6/7/2023

DONE- remove rec0play0 logic from macros:

if (play && rec) play=0; \
if (rec && play) rec=0;			\
	  
// and implement new mode below for overlay on rec+play

DONE: tested fine but still question of rec+play, then we drop play and are just left with rec....

playing mode 78:

- we need way of detaching, extending sections in overlay... so is not such a clear loop across all...
- freeze in NADA, but not so necessary - other REC/PLAY/OVERLAY have different uses for that button
- in overlay freeze can stop and start overlay - see below - stop is no rec not reset below
- in overlay freeze can reset that section to 0 - so no overlay just re-record that section once then overlay (how?)

how we implement - as major modes or as bits????

** 5/7/2023

*REC and PLAY are global, freeze/control is local*

*all is global AND local now* - neither just local, nor just global - with modifiers (can still be major and minor)...

eg. On playback we decide we want to overlay - hit rec to overlay/keep
playing from position. stop rec, stop overlay but not play, play stop
stops all play, overlay/rec

*Instead of new mode 77: rec started during play is overlay* (play started during rec is also overlay?)

so we have 4 states:

- NADA
- rec/resets start of reccount, stop
- play
- rec+play: OVERLAY! stop rec: stops overlay, carries on playing// stop play: into NADA... (so are there 2 ways out?)

// or should stop play just revert to rec with no overlay// and reset on entry // but there is no entry as we are there, so carries on/extends.. ?
// *question of stop play returning to bare reset rec*

*and global/local mode of this with freeze as enter/leave overlay*

// In global/locals freeze mods play, rec, voltage/freeze and what else???

*modifier or major mode (as it is not bitwise maybe best as major mode)= what FREEZER (local indicator) does:*

- freeze (and associated behaviours of speed/playback freezers)
- detach=stop/start/sync playback of that section
- overlay that section/start re-record that section etc...

but also with modifiers for each so we can, say, *detach speed as playback*

*jekyll/hyde for top speed modifier - it has 2/several personalities* 

// 

** 4/7/2023

playing notes: that we want to choose when to overlay on the moment // freeze as overlay/stop overlay = global/local mode

also in 77 when we are in play - next rec can overlay... rather than reset no matter what...

// placed toggles in ==8 section // timing might need to be fixed

DONE>>>// checking back pin conns 

// +last of 4 VCA has wierd echo/drag - bad solder???fixed+

- new major mode definitions as:

TESTED/DONE:
NEW mode 77:

enter mode:
[usual no rec/no play]
[rec] - start recording with no overlay[so erases].
[rec] - sets length of overlay/segment and keeps recording overlay

[play]- plays back with live overlay
[play]- no play: stops playback

*TODO: also as local mode for each one - how? - also code more for states and transitions marked in macros*

** 3/7/2023

- ordered test pads for testing touch...

// playing with all modules: overlay is most important to have... but then we need to clearly reset... see latest notebook

** 30/6/2023

//it is->fix gnd plane as is not consistent*

- new top proto: rec is fine, play not, mode not...

also thinking sample and hold cap needs to be reduced as holds too long - steppy also but why? on transition 0-4095

with divider now as 16 or 8 in main seems less steppy/slow:

- *complex relationship of divider, sample/hold cap, BRK, DELB and speed of whole - but now we run too fast - can slow down main loop but keep dac out faster...*

// check for bleed in this case...

** 24/6/2023

TODO: fix toggles, basic operations are fine.... -> new panel ordered from aisler with filled inner circle...

- space out outer circle -> 1.5mm (approx) and fill inner
- [try larger circles with round middle for sensing, outside is voltage]

//- resolve minor modes:

- DONEdefault high sensitivity with no minormode
- case 7 in progress: default freeze with overlay: NON-try with different overlays= peak (default), add with >4095, add with modulo
- play freezes = regular voltage freeze as above, stop play and overlays, freeze play and overlays 

//- resolve toggling:

- find speed of main loop: 3 KHz (why when we do speed we remove cleardac)

3000/50=60

- now in main loop: test toggles in main loop with new timings

//- TODOmode with no speed fixes rec and play speeds only in rec...

//- DONEchanged speed of cleardac as main play loop effected highest voltage...

DONE//NOTE- in mode 2 speed-div seems too fast-should be fixed//tested*

** 23/6/2023

- FIXED/test/test/still major issues with mode - warbling... and gets stuck - changed some code and values but in the end we need to test again all fingers...

DONE/*TEST-all totest*-- TODO: test in new case 6*: New approach: lowest 3 bits minormodes are just set in no rec/no play.. play and rec bits are seperate and set there

////
Notebook notes...

do minormodes vary depending on state? yes

States:         // minormodes

- norec/no play: nada
- rec          :  rec speed / resets
- play         :  overlay/freeze/speed/resets
- rec+play:    :  rec speed / overlay/freeze/speed/resets

MAJOR: 
1-no speed changes... as case2
2-speed changes - as 2

** 21/6/2023

DONE/TESTED: TODO: sensitivity as new minormode - lowest one... implement/test //YES!now//but do minormodes work?

** 20/6/2023
-
DONE: TIMING of DAC - but stick to new one, check bleed // why is one module top 4095 voltage lower than the other? 4.2v on older 446, 6v on newer

DONE- check closing of VCA

DONE/TEST: CASE 5: *looped rec/overlay: or rec starts that loop/play, and stops, and play just plays back/no recorded overlay, how do we reset? we start rec again*
what do we do about length tho? stops on rec of
*or more rec is regular rec. rec off is overlay same size, play is just play*

can be different kinds of overlay....

*case 5 is simpler than 9/and/10 versions- but use the two different overlays from there TODO*


*ISSUES to resolve:*

- fix on filter values? do we want to filter at 50Hz?

what is our current speed and how does that match DAC holds?

- waviness of finger (does that depend on resistance - increase of voltage size on pads)

- sensitivity/full range of fingers: shift in software...

eg. in macros
  real[4]=real[4]<<2;						\
  real[4]-=1800;							\

*-1800 gets rid of rec offset for overlays*

now just on lowest

1.2M just now for testing on lower voltage and VCA

- triggers - all 10M/done and fixed a bit in software


** 19/6/2023

- Kaffe has 6M finger (1cm distance) - so doesn't trigger, range too low - we can adjust range with pulldowns/// try also for triggers (we have 3M - can try 6M)

- 10M still works for triggers - just now on MODE (also tested on touch/toggle)... but 10M/3.3M/2M raises voltage/base offset...we can go 1M - try 1.6M = 400mV offset, 1.2M is negligable..
// we can try 1.3M

so we have 1.2M on lowest voltage and 10M on mode trigger - to test all with many fingers...

TODO:
DONE//TESTED as case 4 but implement fully for play too:TODO: freeze as additive. holds level on next freeze rather than releasing - is this more of a minimode: =freeze behaviours*
// not really additive but just not releasing

OK_RE_TEST how that works: 3//2: ???slower recording speeds - longer, steppy: 2 - test again

- also how modes 9 and 10 differ...???

** 15/6/2023

- fixing new hardware but now with huge bleed on DAC (was it there before?)// was 74HC4051//replaced and fixed...all tested...fine...

- rec etc pull up - why - is new panel with 47nF with 15nf but there is still a pull on both boards with any freezer // reduce delb!

** 13/6/2023

- latest new prototype and new programmer programming fine... to finish proto...

** 12/6/2023

PLAN: finish last modes, define all major modes, clean modes we have and add all modifiers, need to work on global/local modes (see above), and local modes...

- thinking more of start and end - as when we set length is more like just changing end//

DONE/tested:change 3 also for start and end: new mode 3
when we enter freeze is start/exit freeze is end

case3=DONE4 is just rec overlay version of this // or that can be a minor mode/mod - now is mod 64 bit
4) freeze = length of individual rec/loops rec with overlay... stop rec=stop all/reset
with/without recording overlay
eg. rec-record, play-freeze is start and end// if end<start then we loop round...

can also add modifiers to seperate speed/voltage

TODO from modes.org/below:
:
NON6) press freeze and plays back for that section the last x seconds (so always recording) - how do we determine the x seconds? (next freeze sets that?) - see modes.org
length of freeze sets length - default is full rec_cnt
// what then do rec and play do? 
// not so much sense as need to toggle rec.play
*this is version of case3 with freeze as just setting start->end/length???*

*16) freezers free/detach that section or start playback again in that section... again with overlays (what then does play button do?)
[ play button plays them all!] - is as 15 above but we need to add rec overlay section// play counter shouldn't keep running or that is minormode*


** 9/6/2023

*problem with kaffe finger triggers multiple (not 50Hz) modechanges on top mode (others fine):*

- q of pullup/down: what is it? 3.3M pull down could be tested with 1M - test on R34
- will new gnd-plane solve it?
- do we need add lower gold (as finger hits full circle first)
- maybe works better with ms held also
- check mode code against others // changed 9/6 - to be re-tested just for mode with different fingers

DONE-seems better//re-test with held timing // new test code

///

*new modes copied from below:*

TESTED/DONE3) how to set length of play - at moment just plays until recend... freeze sets end of play... // but next play will reset that to recend

///these will need different modifiers for freeze almost
////
4) freeze = length of individual rec/loops rec with overlay... stop rec=stop all/reset

////5) global/local: freezers rec/stop rec of additions over top of global in rec or playback???. or change/cut the length of that section - more like 4 above that cut

** 8/6/2023

Added in case 0 (now new template): 

new modifiers: 
32: freezes speed/not real, freezes real/not speed
64: freeze stops playback/freeze just for overlay

- DONEfreeze options for speed*

as in mode 19 above also differing behaviour of freeze in playback -
freeze holds playback but not overlay, freeze holds overlay(we have
now), freeze holds both=2 bits??? but 00 is none* re-implement
freezers* re-test changes in mode 20 to freeze*

- see below...

notebook notes:

- DONEQ - add modifier for top speed: freeze just freezes speed, freeze just freezes voltage

TODO:

- NONstack of each frozen value... freeze adds to stack (bit doesn't
  freeze). how do we move through the stack (at speed x), use modifier
  to move thru stack... - how many max values?

- should minimode reset to 0 on each major mode change? - depends on last mode

- can we have local minimodes (eg. touched on by freeze?)????

** 7/6/2023

DONE: changed order of speed bits so these are lowest 12 and overlay is 3 - see case 0 for example...

modifier for freeze on 6 is a bit odd//removed - also as we can have frozen
value and changing - normally in freeze we just ignore changing so we
can have 2 sets of values in a way... frozen and changing under the freeze - cannot be added but how could we use this... speed as the underlying or vice versa*

DONE: TEST!-mode0-modifier could also be if we use live vs. recorded [6] as in [18] and what about overlap??? - just add it


/////
//- what modifiers could be for NO speed - we have 2 speed bits spare!
TESTED modeinprogress-2-what to do with those bits in NO SPEED? - change resolution of rec as in mode 8*

- so mode would be 2 bits = speeds from 1/no div to /32

** 6/6/2023

10ms-1s tap =minor
1s-4s = major
4s+ = reset all

DONE//TODO: test taps, this will change mode layout, 

- started on mode 0 with 32 options

new modes...*

** 5/6/2023

DONE:long or short mode taps for major/minor modes - longer tap was reset and back to mode 0!

older notes:

*USE OF REC/PLAY in locals: so far: sync rec or play (which)... /and/ rec can be enter speed record mode for all sections, playback???*

on freeze: that frozen levels are saved to a stack and can be popped off the stack, various over-rides...????*

*voltage as speed: makes more sense for individual modes as what if there is nothing recorded... also for record loop then speed...*

*TODO:[global rec with local play // global play with local rec (all sync/loop)]*

- start to define a way through all modes and check/add - we have/or/implement:

DONE//1) no reset for rec [or] play counters on next rec/play - check 21 and add for play//added as minormode!

DONE/TESTED2) overlay on next rec only (with/without reset - so without reset overlay would carry on from end of last rec...)*

if no reset then this changes length of rec/play, reset version also changes length as we can go over // *CASE 1: add no-reset opts*

3) as aboverec again changes length of rec with/without overlay ????? means what??? means no re-rec just length or overlay, play could also set length, length of play!!

4) freeze = length of individual rec/loops rec with overlay... stop rec=stop all...

5) global/local: freezers rec/stop rec of additions over top of global in rec or playback???. or change/cut the length of that section

from modes.org:

6) press freeze and plays back for that section the last x seconds (so always recording) - how do we determine the x seconds? (next freeze sets that?) - see modes.org

freezers free/detach that section or start playback again in that section... again with overlays (what then does play button do?)
[ play button plays them all!]

** 23/5/2023

DONE/TESTED:TODO: potential full reset mode if hold mode down >4 seconds... test with beep!

** 20/5/2023

TODO: new modes:
DONE:- global and local: freeze copies previous section ADC - copy as we play back into rec buffer, unfreeze just stops this process

DONE/test in full but seems ok: alternatives: freeze just plays back with own overlay the previous section ADC (does not copy), unfreeze reverts to own record...

DONE/tested- these also suggest another mode which overlays the previous one on playback - so adds the 2 recs...

older notes:
1- global rec/play + speeds
2- global rec/play and local speeds
3- local sections
4- loop all in constant overlay/type loop

+ modifiers

** 18-19/5/2023

notebook notes:

- define global and local modes // and modifiers: speed, addition etc.
- how zones/areas could work eg. divide in two (left and lower, right and upper) and one is speed for other...

23testedTODOmore- overlay mirror: all follow say lowest/bottom voltage 0 but add own
  overlay (live and/or in recording/playback - what makes sense
  here) + rec/speed versions of this
and variations on this eg. all voltages only, all VCA, all

TESTED-case22:- slew which doesn't wait until target - how to do rise and fall independent speeds??

** 16-17/5/2023

*testing new prototype - now all working but a bit more noise than before, maybe gnded panel will fix that more... TEST*

DONE:panel black mask doesn't match PCB we have mask006 - doesn't render/plot as gerber??? where is original... slow render and ordered with GND and new mask 19/5

- records for around 26 seconds with 9000 array = 346 per second 346hz  // 35 seconds with 48 divider-> check noise here...

// with prescalar of 64 we reduce noise, and could hit around 1 minute if we reduce memory a bit...

- fixed timing so now runs at 100 MHz (faster than 466 - which must have been at half speed? 80MHz or so...), no need to adjust anything

still have 200mV noise/jumpiness

///

// 413 is 100MHz - do we need to change our core timing.. 

//at the moment nothing runs... no debug info...: bad soldering//checked again? startup issues/BOOT1 but is same as 446, clocks but default should run...

// fixed with new system file... system_stm32f4xx.o replaced by system413.o  but seems jittery - play with timings

- also all voltages out have an offset of 100Mv (200 with usb attached). 

offset is in ADC - fix in software - not needed on VCAs

////

- check all voltages: 0 is 0v, 4095 is 6v: fingers: 

VCA: finger is around 5v

- check we run at 100 MHz (DONE) and check length of memory...

and we need to fix 1st, 3rd, 4th VCAs on board...

VCA0: 4.3v
VCA1: 4.3v 
VCA2: 4.3v 
VCA3: 4.4v 

// test against other base board: no offset in ADC, 100 Mv noise/not jittery... peak just over 5v on finger. vca finger is 4.8v (lower left dusg)

** 15/5/2023

//DONE: TEST:19 new global:* if we are in playback mode, freeze holds playback/rec voltage...

2 different kinds of freeze: freeze which stops movement, freeze which just holds... TEST:20//2nd kind

- TEST: 33: local: rec freezes all, play resets all counters, also now add 34: rec freezes playback as 19 and 34: that alt one above UNTESTED

//DONE- TEST: 21: global: no reset of rec cnt


- locals now at 30+

- new HW:* first prog tests: F413GTx (320k so we now go from 3800 samples to 9000+ - how fast is 9000, to time?)

at first couldn't program with openocd then after using stlink seems to work???? problem was with openocd???x

//older: with prescalar of 32 we have 22 seconds (so not quite with our calculations) - was that for the 17 secs...

** 9/5/2023

- 8 or 16 basic modes to define for local and global*

DONE:// add global mode where we also just use recorded top voltage as speed (freeze to attach detach that)...// testnew18!//mode numbers shifted...

x4= x2 speed up/lowest up // x2 overlap modulo/peak

+ we have no reset of rec_cnt as extra mode only

TODO: list all modes, test new HW, test new sets of local modes and narrow down modes...

** 8/5/2023

DONE: mode17: TESTED_TO TEST* TODO++ last of globals: freezer shifts start of each particular section towards the end...*

- start on local modes 18+ but still question of what we do with rec and play???

mode 18: DONETO TEST* - *as below for rec/playbacks. note we don't reset rec_cnt - 2 options there

freeze: record, tap again: playback

play: global stop/start all playback (also sync)...
rec: global rec (nada if we are already in rec)...

- check all globals and it.c

** 6/5/2023

Note from PCB:

Notes: that frozen levels are saved to a stack and can be popped off the stack, various over-rides...????*

** 4/5/2023

DONE/test: slew is interpol to target (if we ignore successive targets until we reach it), on way to wormz, for globals and local, not in rec but overlay/playback

- notebook notes:

DONE-revoke lack of overlay on 6!

- how we do speeds in local modes?

-> global speeds from top as in global for all
-> no speed
-> speed instead of overlay = rec tap freeze, play tap freeze - now voltage is speed
-> speed recordings

global speeds=none, on top voltage, individual, recorded

-> do we need resets = maybe make it more developing!?*

** 3/5/2023

Q for locals of what rec and play do - otherwise we replicate functions of globals*

- what are local modes - as versions of all globals:

          GLOBAL    | LOCAL
- no speed-speed/types of speed/types of overlay
- loop and overlay/types
- speed is recorded // when and where?/types
- slower rec
- detachment etc

what do rec and play do in locals?*

- as rec/play are GLOBAL - could also be sync starts
- rec can be enter speed record mode for all sections, playback???

global modes so far:

0 - no speed. overlay is peak.
//1 - no speed. overlay is mod.
2 - global speed = lower up. overlay is peak.
//3 - global speed = lower up. overlay is modulo
4 - as 2. speed=slow
//5 - as 2. speed=fast

6 - globalspeed=slow speed. slowed record 
7 - local speeds on each voltage 
8 - no speed/fixed slower rec ??? comp to 6? why...

9 - looped with speed=fast - 9 adds to rec value from speed new value
10 - as 9 with different rec scheme - what they are? - 10 adds to rec value new value

11 - record speed. speed is lower up (additive and can be modulus)
12 - record speed. speed is lower up. differs from 11 in adds recorded speed... (additive and can be modulus)
13 - freeze overdubs a section in playback mode
14 - freeze records new section
15 - freeze detachs section

16 modes... x X for speeds x4, x2overlay peak, modulo = x8


x different speeds/different overlays if necessary

speeds: none, faster, slower, starts slow

- other modes todo from modes.org and check it.c*

//NON!-4- freezers reverse their own section???

target, speed of trying to get there...==DONE:TODO++ variable slew towards target*


** 2/5/2023

TESTEDcase 11: problem is rapidly hits highest speed - speeds do reset on new record as we write over this...

TODO: 

-DONE mode12: record in loop on freeze and unfreeze is detach from speed...

- DONE13DONEOK, 14,15: global/detach mode... rec and play as usual:
14 is now not overdub just record anew!

to overdub a section only-freeze, to free/detach/pull a section out of playback, re-attach // can this be on same mode?
check rec_cnt vs play_cnt - as for overdubs need to be in sync

//////

- start on local modes, idea of groups/up.down//right.left also???

** 28/4/2023

DONE- case 9 and 10:loop mode: - mode which is always
recording in loop (and type of overlay - start with modulus), and
rec/play buttons (length of holding down) set start and end points?
also as variable speed mode,,, bit odd as folds back on itself - 2
different versions of this, also with/without speed...

DONE/case 11: 
how we can record global changes in speed... tap of freeze on top speed one... additive speed recordings
- question of what speed we use to access recorded speeds... not so simple...

but again for any additive rec we would need to clear that. how to time clearing speed? speedtestDONE-just clear one

/// notebook notes:

- freeze: 
as freeze
as detach -> leave playback, reattach back into sequence
as re-record -> that section until next freeze
as reset -> of section to blank, see how long that takes...TEST! rec will blank so only makes sense in certain modes
what else?

- how we deal with overlap? - over-record, I think this is default when we over-run // add-rec is option
- loop/rec/add - as limit4095//as modulo

- add speed rec - how we start stop // order of:
  recO->playO->speedrec? or playback is always speedrec in that mode,
  length is length of rec, detach from speed/from rec

- where is reset of each set of recordings? and where do we need it?

** 27/4/2023

- what we need to do when we change modes - eg. lastrec and lastplay...*

DONE: diodes added on base PCB in new dir // to order and test...

- DONE-LOG/and fixedlog//decide on linear or log speed across all? generate test arrays...
- DONEnew log array for just additive speeds 1-16 test in: case 5:

DONETESTED- case 7: voltage as sectional speed only on playback - differs for different adcs TESTING?
*voltage as speed: makes more sense for individual modes as what if there is nothing recorded... also for record loop then speed...*

or 2 taps rec...

- DONE:case 8rec slow down count (with fixed speed) - test - was which one... 6 has speedslow...

//

how and where do we record individual speeds - in loop...

- list what modes we have or can port and how these can be modified:

////////////////////////////////////
//recent notebook:

Divide modes global and local...

- detach a section, what that means? re-record that section only, leave that section as live/unrecorded
- loop of rec and overlay - key is length of loop and how to determine this

          GLOBAL    | LOCAL
-no speed
-speed
-loop and overlay
-speed is recorded // when and where?

// detach - global becomes local

do we still use rec and play in local modes - eg. rec starts possibility to record, play plays back... see each case...

x different speeds/different overlays if necessary

speeds: none, faster, slower, starts slow

** 26/4/2023

TESTS as below:
- DONE:test resolution...  seems high enough at 32
- DONE case 4: subtractive speed (need new log scheme there - how slow... 1/64 - // fixed bug in speedsample

- DONE case 5: change speed of global recording - but we get a jump if we change speed from voltage there... so we could have fixed sets of record speeds in modes...

this is also is general issue of all simultaneous recordings - why we need independent recordings and free/detached play/over-recordings...*

question of speed and ram - leave open for now...

static uint16_t recordings[8][7000]={0}; // 

but we wanted top bits for speed and we have 12 bits for values??? which leaves 4 for speed....

// new stm - F413 is 100mhz, 320kb, STM32H7A3RGT is ++mhz and 1184KB , H573 are pin compatible... much more memory

or 413RGT6 has 320k and is available at farnell

we have 128kb ram... on f446 // 

//////////////

- panel filter pcb doesn't match schematic so it ALREADY has 15k there so we just need DIODES (so no need for extra resistors there) - base or panel... base?

but we would need for freezers and any other pins exposed - 10k but should be fine...

** 25/4/2023

TODO: port/draft new modes eg. individual speeds of global sections, play/overlay each section, individual rec and playback...

types of overlay: modulo, peak

speed: additive, subtractive, adds from below (which is what we had) 

how we can record changes in speed... tap of freeze on top speed one...

from earlier notes: - DONETEST: also do we have functionality to change/slow down speed of recording - so jumps/blends=interpolates like a slur of values...

- also question of voltage of each as speed of section in playback - as we need log and is odd mix... 0-3 is already log, 4->7 needs shift and log

// if else i guess

TODO: 

- new touch panel // or could be on base with protection diodes and resistance

todayDONE:

- added ignore top bits which we will use later

- DONE**full open and close of VCA - test on lowest one -> R26 OUT1TOMIX -> 27k tested, no bleed and full voltage (changed on PCB/schematic - but lots of errors to fix there)

- max for our finger is 2.2v (so just 11 bits but that leaves us short)

- log for vol, linear for value... - so do this in macro...

// check voltage range from VCA bottom bit - we hit 1.5-2v
  
so for VCA let's stick with log approach and other is linear

** 24/4/2023

DONEcheck VCA full range, adjust parts

Note: all adc is 12 bits but we treat as 10 bits ... how high do we go?

- note that we don't get full VCA voltage out - do we need to re-adjust this? - see notes below at 4.2v - can we fix this in control...
// or maybe just adjust final amplifier res to say 22k

- full voltage out-> 5v checked...

- does speed freeze...? no, should it just follow our CV?? this could be option - we try and works well with freeze

// logspeed goes from 1/8th to 4x speed...

- use of top bits for individual speeds...

//
- freezer as way of detaching rec or playback of each section
- if we are in playback can be ways of touch adding or modulating playback or use voltage as individual speed or another factor (like length of loop)

eg. touch is not adding any voltage, but changing a parameter = speed, length, what else?

- type of overlay - modulo, additive, subtractive


** 20/4/2023

- DISCARD->NOT working - as always jumps up on freeze... that after freeze we can still add value to freeze as a
  baseline. makes sense for VCA (and voltage). otherwise the pad does
  nothing and can always be left alone. To make sure all modes make
  sense, even if not sure which mode one is in...

** 29/3/2023 TODO:

- start to define tasks from below:

-basic functioning: what is prescalar, how long do we want top record for, what is frequency resolution, any artefacts, speed up and slow donw
-define timings and check all mode/freezes etc.
-define and implement modes
-BOM, assembly...

- use debug to figure out rough rec speed? every 6 or so seconds // prescalar of 8

with prescalar of 32 we have 22 seconds (so not quite with our calculations)



*which prescalar?*

- test logspeed and speed modifiers (speed starts from slowest?)

** 27/3/2023: REVISIT2

TODO:
- re-check basic functioning
- HW and washers - as we don't seem to use them: tested now with one washer and is fine..., BOM/update any footprints (what are ones for assembly:

Housings_SOIC:SOIC-8_3.9x4.9mm_Pitch1.27mm

SM1206POL

which is correct base PCB - last one?

- re-acquaint code - how well it works as basic and calibrate speed again...
- list of new modes to do in new_modes.org - check older code, modes lists

it_strip.c

- how to make sense? eg. speed ranges-logspeed, 1/8 speed, top bits ???

- top bits are used in modes in it.c for individual speeds
- range is logspeed - check this, 1/8 as we run through 8 DACs
  sequentially..., top bits were reserved for individual speeds...

- how fast does it run and  how many seconds of gestures by default???

7000 values in each array: 2kHz we say (at 32 pre-scaler to check as was last at 8): and there are 8 sections so each runs at 2k/8=250Hz

7000/250=28 seconds... TO CHECK!

*older below*

** 4/10/2022

- also do we have functionality to change speed of recording - so jumps/blends=interpolates like a slur of values...*

** 20/7/2022: REVISIT

- test what is working: basic functions, freezers, rec/play but is 1/8 speed correct - re-test as 1.0

- where are we up to with speed ranges - we have logspeed

- check/test code for mode switch and re-acquaint code: top bits to implement, basic schemes

- what modes still need to be implemented: list these - see modes.org for list there and older code...

** xxx

30/12/2021:

- switched over to HSE in system_stm32 rather than other clock init and seems to work fine but will need to recalibrate timings/re-check but freeze works

20/12/2021:

// so we might need to tweak the speed array but bleed is now SORTED!

- so no bleed with freezers as these don't involve the adc - what about on additive playback?TESTED fine 

- DONE:but we need to re-do speed as was for old adc scheme

17/12/2021:

SOLVED with single ADCs and lookup arrays.. 

- remaining bleed is in ADC array ... 

- note that 0 should be 16mV but we have 88mV with << scheme and single ADC

single ADC reduced bleed with <<2 to 88->112mV which is 24mV

single ADC fails to read case 2 channel 5???!!! - FIXED with disabling DAC channel 2

still slight bleed - lookup for values so we keep bottom low (try log too)

16/12/2021:

- speed code is re-written also now with logspeed to try out...

TODO: trial with all caps replaced for bleedthrough etc - 1NF DONE

still bleedthrough but is that anything to do with caps... (see how small we can go with c9 - 100pF?)

TODO:

different fingers for vca, 

also if we can change vca so opens a bit more: values there R52 was adjusted from 47k to 10K maybe trial other values

20k now we have and seems ok

15/12/2021:

- need to add overlap flag for rec and playback...DONE

- problems with speeds and aliasing so need to rewrite code without 32 steps

- try without the 32x slowdown for record (and speed will skip samples)

so we need 8x say upwards of 1KHz which is 8KHz in main loop

we have:

  // 1024/4 is 8x 862Hz (toggle speed so 2x that which is fine for us but we need to lower the sample/hold cap...

replaced c9 with 1NF (from 47NF)

1.6k=4 seconds..

14/12/2021 

- CV out peaks at 6v - 6.6v is our maximum for 4095

- VCA 4.24 VPP for 5v signal (4.6v is 4095 as I guess we close the VCA a bit) but we can only get to 4.2v on first VCA

- aliasing always - we need to re-think all speeds as DAC can only run up to 100 Hz

/// reduce capacitor in sample/hold from 47nF


+input filter is 15nF and 15k so gives cutoff of 700Hz x2=1.4KHz which is fine+

10nF would be low pass of 1Khz

22nF 500hz

if we sample aorund 400 hz we want 200hz low pass=47nF and 15K???

but rec is 32 times slower and each dac is x8 so that is 32x8=256

in theory is then 8KHz / 256 = 31Hz so aliasing

- so we make everything run faster but really need to resolve all and be very precise of speeds (filters in recording)

- what do we need to get to 1KHz - 256KHz clock

what is max recording again? if say we record at 1 KHz - 7000 samples is 7 seconds...

// need to check we run fast enough for that clock, alternative would be to software filter for recordings
