* notes/phrases

- a flip flop is both memory and switch, swithcing back to oscillation to envelope and to change
- the gate is a gatekeeper
- self switching is the latch which is memory, positive feedback

* for manual

AURORA CONSURGENS ALL COLOURS AC

- start with Aurora Consurgens/rising dawn == All Colours stuff (see notebook - where???)
- A suggested signal path high frequency noise channeled to the gatekeeper ... same for low frequency

high and low, left and right, as above so below



* 3/7

clock as central - noise as clock, clock comparatored with noise,
shift reg clock, squared up noise as clock

clock as pulses

clock -> shift reg // filter // comp // as noise

all colours as pulse/noise/filter

ripley scroll

* 10/7

Shift reg/mostly in software:

https://www.embeddedrelated.com/showarticle/1112.php

https://www.avrfreaks.net/forum/256-bit-shift-register-required?page=all

http://electro-music.com/forum/topic-23881.html

* 19/7

- switch to MAX7490 - switched cap all purpose 2nd order x2 (so we can cascade
  for 4th order as compared to 8th order for MAX7400):

https://www.mouser.de/datasheet/2/256/MAX7490-MAX7491-91768.pdf

+5v, ext clock 100:1, QSOP16, 

- flip flop for shift register - flips on each clock/pulse

- shift register from http://www.cgs.synth.net/modules/cgs13v2_gated_comparator.html works well

16 shifted outs for clock OUTS in circle around

XOR also/ INS all buffered for fingers - TESTED

- to start adding to a test circuit...

* 26/7

- finger tested - op amp/buffer --|>---[] []---|>comp]=- (comparator with diode and 100k to GND)

- comparator also with finger voltage divider...

- question of AVR and/or shift reg/XOR etc. - but we need multiple ins
  and outs for AVR so maybe better served with ARM or with ATMEGA128

- TEST: how fast we can run shift reg, speeds and settings for various PWM

* 30/7

- manual in the form of a poster

- all digital sections (7490, AVR and even between both CLOCK) as blackboxed for 12v in and out = protection/ins and/or shift levels, CV in also

pulse inputs:
https://electronics.stackexchange.com/questions/43498/how-can-i-use-a-12-v-input-on-a-digital-arduino-pin
zener and resistor also as in microbd/SIR

pulse out as 2n2222, pulse in as transistor now

avr is 5v currently

- timing - for SR included code and simple pulse on/off is 130 KHz, fastest we can go with no code is 480 KHz

* 10/8

- have 16 pulse ins and outs and configure length of SR in software (maybe add one extra cv)

* 21/8

- have 7490 for bandpass or highpass and 7400 for lowpass (as is 8th stage and easier)
- gating of noise as pulses with primitive envelope/VCA with single transistor:

http://www.electro-music.com/forum/topic-33190-25.html

* 23/8

- maybe 7 ins/outs for pulses to micro, 7 envelopes-7 env is too many?

* 29/9

- see new ouroboros design as centre piece - perhaps exposed gold all
- check comparator out voltage and if we need to mix with micro/pwm for filter clock in
- new design follows eagle/worm/toad/earth
- earth as ripples in ripley sea
- LFSR as outer ouroboros
- check all possible signal paths for fingers and patchables
- standalone - fingers only with one input and out, euro - patchable internally and externally
- Q of switch for filter input between noise and other source (hand) 4066, 4053 - now dg419

* 29/11

- set 7490 as high pass and spec resistors - 10K for R2 and R4 and 200K for R3
- how to resolve finger/filter clock routings? - with another analogue switch // dg419

- list all jacks: *check this*

filter: in, clock in, lpoutx3, hpoutx3 [for feedback]

AVR/LFSR: cv_in, cv_in, clock pulse in, pulse in, pulse out, hf pulse out, hf pulse in

noise: 2x noise out for patchings, comp1, comp2, compout for processing

ouroboros: in and out

envelopes? - maybe leave as fingers only or one envelope in, in2, out

/////

- what is size in HP (for standalone we could use 4ms pod as 26, 32 or 60 HP - also frap tools)= 32HP=162.5mm or 42HP?=213mm

*20HP=101.4mm*

(height 128.5)

- how many pulse in/outs from atmega 6in 6out 2env? 6 ouroboros...

pulse in and out low and high frequency versions??? where to place?

6x pulse in/out low +1 pulse in HF, +1 pulse out HF

- sketch analogue only version for larger home etch... - fingers and two jacks...
- how to connect top and bottom pcb - jack height = 11mm (smd options for top panel?), how many connections 

eg reich: SL 2X36G SMD2,54 on one side and 8.5mm on the other

- comparator on one noise source

- normal signal path noise->comp->filter/pwm clock on filter->LP/HP OUT

- check comp as usual/flat gives straight noise out - which it would never do so we need to make this modular/seperate

* 30/11

- decision to make all patchable by jack and finger. so no switches/dg419, no norms
- thus we need to work out common patches so we can have all jacks

layers: 

filter
avr/LFSR/pulses
noise-ouroboros-osc

where we put comparator/env/low and high freq sections?

comparator=gatekeeper/triangle

- lose filter comp as we have comparator as modular, lose also avr comp for clock (replaced with pulse in)

- maybe add extra modular comp

* 4/12 ++  19/12

TODO:

- +check footprints for both projects...+
- misc graphical elements and overlays...
- noise as drops for analogue/etc
- flip-flops/toggle analogue switches (for touch open analogue version):

flip flops: 4013, 7474, 7473

dg419 or 4066/4053 or even transistor switch (as in rough envelope but then we have one way only - but we can use for other audio paths)

the simplest thing to do is to AC couple the in/out pins and bias them
to the middle of the 4053's power supply. In a +9V system, this only
needs a two resistor divider and a cap, then a resistor and capacitor
per in/out pin.

what are paths to switch

circles/layers:
1-exposed comparator
2-ouroboros
3-switched noise
4-SR
5-filter (paths in?) 

- test 7490 as bandpass again with noise source
- question of mhz for pwm -> test

- *place low pass on output in case pwm comes through*

- for analogue only: flipflops for shift register so we have access to
  all ins (which are also outs but guess simpler/unbuffered), delay
  (switchable) on ouroboros - cap to gns

- question of bias for ouroboros...

TEST: flipflop touch switch and SR, bias on ouroboros. delay on ouroboros

refs:

http://mickeydelp.com/blog/anatomy-of-a-drum-machine?

http://www.sdiy.org/richardc64/new_drums/dr110/dr110a1.html

transistor comparator: http://ch00ftech.com/2012/06/20/2279/

question of abstracting out connections and elements. eg. clocks, different clock sources and should we divide these?

* 3/1 design notes

- panel breakout for euro/less analogue version: replace pads, *how many?*, include voltages and in/out - interchangeable front panels hand-made perhaps
- hand drawn transistor ouroboros in centre
- led triggered by micro in middle underneath exposed/no soldermask portion (how to expose all?)

* 7/1 tests:

- 1M on ouroboros makes things quieter and more stable - we could use finger pads for bias up and down

- TODO/TEST:

- test sr cell idea(?) from philips pdf
- capacitor delay on ouroboros - say 1n between collector and base (noisier but need to see how it works properly)...

// for simple All Colours

+- pwm mhz changes DONE+

+- 7490 bandpass with noise sourceDONE+

- flip/flop touch 4013

- in out transistor micro pulses and inv/non-inv amps for finger ins? (buffers on first straight followers)

OUT - lose pull down and reduce collector to 1k, base is 10k - at highest freqency we lose gain (MHz)

IN - could reduce base resistor (47k) but seems to work ok with buffered signals, test more, and no pulldown, and with hc14?

- offsetted clocks with logical operations across clock rings - SR is
  NOT pulses (we could AND it with its clock), but out of micro SR
  simulation IS pulses

- different smd transistors tested for noise generators and re-check BEC layout etc...

* 29/1 from touch: analogue/breakup tests

- only so many fingers, so use more flipflopped paths as a way of patching
- audio in/out path should not use fingers
- test individual circuits and keep simple ones as insignias...
- pads too small and too close to gnd/other signals
- for ouroboros we need switching in/out to avoid oscillation
- check transistor layouts!

* 7/2

- what we could do for test SMD assembly/quote - STM, base board or front panel with ouroboros and other simple circuits...

* 12/2

- ALL pulses/SR are in interrupts, all as multiple pulse outs without modes/cases for these, modes only for how SR connects and for slower SR stuff

- open and close ouroboros in one place with both touch flipflops and finger/transistor in

- spiral out from ouroboros with switch/latch/env elements/recursive/noise

* 20/3

- add extra 7490 in chain for extra poles
- add 4 or 8 bit DAC on shift register/AVR

* 21/6

- for all colours smaller panel: 20hp, one side is gold on bare
  pcb, other side is gold on black mask (or black mask on gold)

filtered low freq pwm, 4 bit DAC (for both low and high sides),
trimmers for noise level on back, finger osc centre pads into mix,
maybe top or bottom is diff amp (TO TEST) and other is comparator (x2
on each side)...

- tested comparator with pwm in and this can be interesting with external CV
- also mix back filter feedback is very crackly and could pulse nicely somehow? (env returned?)
- we need to swop pwm around so 16 bit is HF to get good range, and 8 bit is LF but we want to be able to change pulse width
- check all possible paths

* 25/7

- avr at 16 MHz 8 bit is too slow for fast shift register action so options:

outboard flipflops under hardware control - too complex
STM - which one, small package, easy development
FPGA - nice in long term?

we need:

1 or 2 timed and 2 pin interrupts, 2xPWM outs (so 3 or 4 timers), 4x CV ins ADC

GPIO in and out (3.3v): how many: 4ins(2 are interrupts), 5 pulse out, 1x4bitDACs,  2PWm outs, 4CV in (total 19!)

stm32 as we can use worm code and stlink programmer...

choose _==*> STM32F103CBT6 - see peaks, braids  - LQFP-48  72 MHz 5euros -> test board ordered

3 timers and one PWM... ok

//setup programming/build env/makefile/try pwm/gpio/ADC/interrupts/schematic

////////////////

///NO to below as programming is usb only via IC:

Cortex-M0+ - teensy LC, 48 MHz

M4 - teensy 3.2 72/96MHz 

MKL26Z64VFT4 Cortex-M0+

MK20DX256VLH7 Cortex-M4

//coding/programming - but teensy is programmed via usb?

https://github.com/PaulStoffregen/cores/blob/master/teensy3/Makefile

http://kevincuzner.com/2014/04/28/teensy-3-1-bare-metal/

https://github.com/djmdjm/teensy3

* 26/7 +

- different clocks for high and low pwm but keep diff of audio signals in to filters

*but how do we deal with PWM filter?*

STM32F103 base: https://github.com/trebisky/stm32f103/tree/master/interrupt

https://github.com/avislab/STM32F103/tree/master/Example_ADC

peaks: https://github.com/pichenettes/eurorack/tree/master/peaks

braids: https://github.com/pichenettes/eurorack/tree/master/braids

// TODO with blue pill test board:

- basic makefile, programming connection, blinky LED (GPIO pin 13 on C), how fast toggle pins=3.3 MHz with -O3

quick test: stm thing has from top: VDD, SWCLK, GND, SWDIO

we gnd boot0 on blue pill board, programmer header on this with usb (powered) at top is from left: 3v3, SWDIO, SWCLK, GND

and using templates example and:

:  st-flash write blink-cmsis_firmware.bin 0x08000000

this works/flashes!

//////////////

- pin input and pin interrupts, pin mappings, one or two PWM, timer interrupts x2 maybe, DAC=PA0-PA7, PB0, PB1

organise pins around what works for pwm and interrupts: TIM2 and 3 seem have global interrupts...

there are 4 timers -> 2 int->2 and 3 test, 2 pwm->1 and 4

- translate to schematic depending on timers etc.

** findings

- PWM is fast, but interrupt timer and interrupt pins peak at around
  700 KHz (which for high could translate as around 10-14K which is OK
  but we need to execute stuff!)

** refs

https://github.com/istepaniuk/stm32-templates.git

http://stefanfrings.de/stm32/stm32f1.html

https://satoshinm.github.io/blog/171212_stm32_blue_pill_arm_development_board_first_look_bare_metal_programming.html

https://github.com/rogerclarkmelbourne/Arduino_STM32

http://www.diller-technologies.de/stm32_wide.html#interrupts_extern


* 17/9

- panel left will need full solder mask and circles for ... IN or OUT?

  and circles need gold/mask or just soldermask - 5mm radius, 0.2mm thickness - and watch as
  some footprints are reversed/mirrored ???

* 23/9

- basic PCB assembled test: no heat and all voltages seem fine
- TODO: +test programming of STM+ and basic hardware

programming works fine!

TESTS/TODO: print jack layout, noise out, comps, filter with pwm, pulse in and out, finish programming, panels, xl for assembly quote 

* 9/10

- tested both noise outs - fine
- panel finished - check basic hardware before ordering - size is 101.4x128.5

* 10/10

- testing so far: we need to re-adjust /adj/ resistors on all comparators -> what did we use (we used 1k for testing now)

for noise we can use 10k-15k on positive, 1k-4k7 on negative.

but will depend on levels, also for pwm (level is 0-10v)?

- both PWMs now working fine/adjust range and dividers - filters working, check levels etc...
- ends of ADC knobs for speed are clicky - smoothing or???

* 14/10

- top of comp -> + adj res is now 10k, and lower to GND is 4.7k, changed on schematic but not on PCB/now changed on PCB

- we need to change the 4 incoming res to 100N caps by hand on PCB -> redo each precise location/recorded

comphf1in/r27->c10 153.71, 119.99 X

comphf_clkin/r44->c12 154.275, 79.95 

complf1in/r26->c11 104.53, 72.68 X

complf_clkin/r62->c13 102.3, 89.875 X

->>>DONE

- we need to change the 4392 comparator for a fast op amp with higher common mode input voltage, maybe also all op amps on 12v supply or?

* 21/10

- try replace 4392 with TLE2072 (mouser: 595-TLE2072IDR ) and see if bleedthrough /// 4392 on fast noise source is ok!
- no impedance issues on comp inputs
- TODO: recheck all noises, comps and filter levels with scope, clicks were
  not adc smoothing but changes - fixed to some degree with preload
  for pwm values but we can also try smoothing, check pulse in/with
  interrupts and pulse out, check timer interrupts

- study SR stuff and define precisely all modes, implement and test modes

modes.org -> max 64 modes= 4PWM x 16SR

* 28/10

- minimal bleedthrough with TLE2072 as U12 sub (rework on pcb an schematic)-DONE

doesn't bleed on pwm but signal in on C1ch 

-------> highest speed is 280KHz vpp 4.2v with TLE2072, with TL082 we
have 3.4v which seems to work fine for filter and with no
bleedthrough...

- check all levels VPP:

PWMH: 3.8v
PWML: 3.8v
noiseL: 2v (maybe increase R19)
noiseH: 3v (maybe increase R12)
compLC: 5v - as these 2 are limited by filter clock input diodes
compHC: 5v
compLA: 7v
compHA: 8v
filter outH: 2v
filter outL: 1.6v peak - maybe more gain on these ?

- check pulse outs: DONE all working
- check interrupt ins and regular pulse ins

problem is that we are on the same interrupt for both clock pins in: void EXTI9_5_IRQHandler(void)

[note if we want other pulse ins as interrupts these are on: PB6 and PB10 which are EXTI: 6 and EXTI: 10 I guess?

so 10 (HF side) would be on different interrupt: EXTI15_10_IRQHandler

but both work ok as interrupts - sample code toggles pulse out on each side... DONE

- check 2x timer interrupts: we use TIM2 for HF and TIM4 or LF! DONE!

- test that both mode CV knobs work ADC0 an ADC1 !-> yes!

/////////////////

- adc smoothing if we need // not necessary so far but might be for modes...

- define clearly all modes

* 29/10

- schematic reworked and some problems fixed so will need to re-order and test again

- started on modes// tested simple pulse outs and simple SR codeDONE but
  need to doublecheck with test.c lap code to make sureDONE

- speed of updates/sr interrupt means we can't use speed as offset, but maybe in pulses code!

* 30/10

// TODO: before we fill out all modes, deal with length and spacings - SRlengthh should not be <2
// ----: also deal with how we space the out bits - now is just length/2-DONE

// copy working length code from mode 0 to rest->DONE but we need to re-test all of them

// test lf and hf together with latest mode code - CLOSE

// thinking also whether clock/pulse should be toggle or other pulse as toggle?
// as other pulse is not normed to anything - leave as clock as toggle DONE

* 31/10

- added LF code - in trhis TIM2 interrupt we need to watch how fast we can run it - otherwise it doesn't run - check all possibles!
- case 7 - electronotes crossover seems to work so far


* TODO:

- basic hardware tests (eg. white noiseDONE, comparators, filters)...
- test all analogue pwm/pulses/ADC
- programming modes and timers

* notes

- ignore other all_colours schematics in ERD!
- copy and add to git so can change schematic - DONE

- add one shot flip flop. monoflop/uniflop from DDR book - where we put this or
  could be in atmega? - makes pulses of uniform length before 7400?
  and after comparator

monoflop=monostable multivibrator?

- Henry noise seems to be low for input into 7400/test
- external clock for 7400 only works with comparator/noise not external signal
- test inputs to 7400

  - add clock input diode limiters DONE added on proto
  - add maxim 7400 input limiters using tl071 DONE
  - is Sample/HOld working? - try reverse GSD to DSG for our 2N5457 and try remove R20 - maybe needs re-design for right parts and slew NOT USED
  - how to deal with multiple switching paths for feedback JACKS
  - shift register in feedback path? ATMEGA
  - further elaboration with hand/finger/capacitive sensing mandala? - changing high freq clock with hand/fingers?

* key 

sockets from left into pins 

sockets: 2143 ???why???

pins: 00001234

CO  comp out
BI  buffer in
BO  buffer out
BI  buffer in
BO  buffer out
SHI samp/hold in
SHO samp/hold out
SHC samp/hold clock

COC comp cv
COI comp in
HNO henry noise out
YNO yusynth noise out
74O 7400 out
74C 7400 clock
74I 7400 in
G   GND

* atmega software

length of SR 16-32? - 16=65,535

- pwm out for maxim 100x, pulses out from SR, SR and CV to pwm, primitive DAC out, modes
- CV in for SR, pulse in for lock and random leakage, knob for modes, slew knlob and cv in
- SR code and leakage, lock/unlock
