** 12/2022  more of a scratchpad for notes in progress

- should all be matrixp? - maybe trial new first 16 modes draft


- if we slide across inner modes (list of inner modes) - slippage or dislocation of these then we need to make sure constraints fit!?

- check all IN and CVLs

- check length of all arrays and accesses/crash test

- check all code marked TEST or TESTY 

- even about how to simplify all... why it is so complicated!

- that maybe we should NOT set gate[w].theroute=depth everywhere as it can also be used for gaps - or should just be set in OUTER/INNERS

for later:

- speedfromnostrobe[38] could go up to 64????

- thinking of revert to idea of... differing slur speeds (but then we need to make independent counters - maybe too complex)

- make more of orderings eg 1,1,1, - number of times it repeats. how? later on?


//// ramblings>

Questions of: uselessness of CVL in some cases, of no IN available in others (check probs)

probs which use IN: spdfrac2,3,4,spdfracdac3, zosc2bitsI, compbits, spdvienna -> how they use IN?

bits/routes which don't use depth: routebitsnod[32]

*bits/routes which use IN and depth:*

// we need to take account of   gate[w].matrix[5]=LFSR_[w]&4095; // vs LFSR - IN // for example as we habve in some geoC cases but these are all scattered around...

binrout_probXY, XY1, XY2, XY3, binroutfixed_prob1R,
binroutfixed_prob1L, binroutfixed_prob1, binroutfixed_prob2,
binroutfixed_prob3, binroutfixed_prob4, binroutfixed_prob5,

these are in speeds:
binroutfixed_prob5_nosh, binroutfixed_prob1_nosh,
binroutfixed_prob3_nosh, binroutfixed_prob4_nosh

cipher, pcipher(in padcfromsd?), zwiardbits2I, zwiardinvbitsI

zsuccbitspp, zsuccbitsprob, zsuccbits_noshift, zsuccbitsIpp, zsuccbitsI_noshift, zwiardbits, zwiardinvbits, zTMsimplebits, zwiardbitsI, zwiardinvbits

compare to:

uint32_t (*routebitsnostrobedepthprob[32])(uint32_t depth, uint32_t
in, uint32_t wh)={binroutfixed_prob1, zsuccbitspp, zsuccbitsIpp,
zsuccbitsprob, zwiardbits, zwiardinvbits, zTMsimplebits,
binroutfixed_prob1R, binroutfixed_prob1L, binroutfixed_prob2,
binroutfixed_prob3, binroutfixed_prob4, binroutfixed_prob5,
binrout_probXY, binrout_probXY1, binrout_probXY2, binrout_probXY3,

- question of no depth used in functions when we use CVL as depth, also of IN above

- question of split between route functions which use type (all in routebitsfortypes) and those which use default/as in basic gshift type. how we manage this split

or we have first 16 modes which stick with these... and then we get more complex TODO/in progress

default_route/depth_route/type/dactype/dacparam/length

prob of x vs. y

- split local route/global route

- organise probabilities better with gaps

- questions of which bits/routes and which probs use IN and how we provide this!?

- rethink runglers and check these - 

basic rungler: speed from X, bits from Y[mix/logop/]generate bits

rungler signal->osc->own clock

rungler_to: 

rungler_from: 

////

adding and testing new functions in geogen...
