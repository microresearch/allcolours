  case 0: 
    if (counter[w]>speed[w]){
    dactype[2]=0; 

    counter[w]=0; 
    Gshift_[w][0]=shift_[w]; 
    Gshift_[w][1]=shift_[w]; 
    Gshift_[w][2]=shift_[w];
    Gshift_[w][3]=shift_[w]; // ghosts for l,c,r only but let's keep one spare
      
    //2.5-shifting of which bits <<
    shift_[w]=shift_[w]<<1;
  
    //3-what is routing for incoming SR bits, cycling bit
    // we have default route here
    bitn = (Gshift_[defroute[w]][w]>>SRlength[defroute[w]]) & 0x01; 
    Gshift_[defroute[w]][w]=(Gshift_[defroute[w]][w]<<1)+bitn;  
    //    bitn=bitn^bitrr; // just XOR now for this mode

    //4-what is incoming pulsin bit if any? - incoming pulse will always be XORed in
    if (pulsins[w]!=0){
    xx=!(GPIOC->IDR & pulsins[w]); 
    bitn^=xx;
    }
    
    shift_[w]+=bitn;
    
    //6-DAC result for any purposes - do we output in main loop?
    dac[w]=DAC_(w, SRlength[w], dactype[w],0); // TODO - add in DACtype.. basic DAC-0

    //7-pulses out if any
    PULSEOUT;
    }// counterw
  break; 
